EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Study/3rd sem/Project/DBridge-current
starttime, test: 1664399143321
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: org.springframework.beans.factory.annotation.Autowired is a phantom class!
Warning: java.lang.Iterable is a phantom class!
Warning: java.util.ArrayList is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: org.springframework.stereotype.Service is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: java.util.Iterator is a phantom class!
Warning: java.util.Collection is a phantom class!
Warning: java.util.Set is a phantom class!
Warning: java.util.List is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: org.springframework.transaction.annotation.Transactional is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: java.util.Date is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: javax.persistence.OneToOne is a phantom class!
Warning: java.util.Calendar is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: java.lang.StringBuilder is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: org.springframework.data.repository.CrudRepository is a phantom class!
Warning: org.springframework.data.jpa.repository.JpaRepository is a phantom class!
Warning: org.springframework.data.jpa.repository.Modifying is a phantom class!
Warning: org.springframework.data.jpa.repository.Query is a phantom class!
Warning: java.util.stream.Stream is a phantom class!
Warning: javax.persistence.OneToMany is a phantom class!
Warning: java.math.BigDecimal is a phantom class!
Warning: com.fasterxml.jackson.annotation.JsonIgnore is a phantom class!
Warning: org.springframework.security.core.userdetails.UserDetails is a phantom class!
Warning: java.util.HashSet is a phantom class!
Warning: java.util.function.Consumer is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: javax.persistence.ManyToOne is a phantom class!
Warning: javax.persistence.Table is a phantom class!
Warning: org.springframework.security.core.GrantedAuthority is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:10
| | Id:11
| Union
| | Project
| | | Select
| | | | Id:11
| | | | Id:3
| | | Id:6
| | Project
| | | Select
| | | | Id:11
| | | | Eq
| | | | | Id:3
| | | | | Zero
| | | Id:9

{<repo>=8, <list2>=9, <cond>=3, <list1>=6, <init_val>=10, <itr>=12, <coll>=11}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:21
| | | Id:16
| | Id:18
| Id:20

{<list>=18, <elseval>=19, <repo>=8, <list2>=9, <cond>=16, <list1>=6, <init_val>=20, <itr>=22, <coll>=21}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:26
| | Select
| | | Id:26
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:33
| | | | | | Id:30
| | | | | Id
| Project
| | Id:31
| | Join
| | | Id:33
| | | Id:30

{<list>=31, <elseval>=19, <repo>=26, <list2>=9, <cond>=16, <list1>=6, <init_val>=32, <join_right>=30, <itr>=34, <coll>=33}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:45
| | Select
| | | Id:41
| | | In
| | | | Id:43
| | | | Id:47
| Id:46

{<list>=45, <rel>=41, <repo>=26, <cond>=16, <clm>=43, <init_val>=46, <join_right>=30, <itr>=48, <receiver>=38, <elseval>=19, <list2>=9, <list1>=6, <coll>=47}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:55
| | | In
| | | | Id:57
| | | | Id:61
| | Id:59
| Id:60

{<list>=45, <rel>=55, <repo>=26, <cond>=16, <clm>=57, <init_val>=60, <join_right>=30, <itr>=62, <clmagg>=59, <receiver>=38, <aggvar>=52, <elseval>=19, <list2>=9, <list1>=6, <coll>=61}
    public com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.User user, localUser;
        java.util.Set userRoles, $r2;
        com.bookstore.domain.security.UserRole ur;
        com.bookstore.repository.UserRepository $r0, $r6;
        java.lang.String $r1, $r13;
        boolean $z0;
        com.bookstore.domain.ShoppingCart $r3, shoppingCart;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r7, $r8;
        com.bookstore.repository.RoleRepository $r9;
        com.bookstore.domain.security.Role $r10;
        org.slf4j.Logger $r12;
        java.util.Iterator shoppingCart;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        user := @parameter0: com.bookstore.domain.User;

        userRoles := @parameter1: java.util.Set;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = virtualinvoke user.<com.bookstore.domain.User: java.lang.String getUsername()>();

        localUser = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        if localUser == null goto label1;

        $r12 = <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG>;

        $r13 = virtualinvoke user.<com.bookstore.domain.User: java.lang.String getUsername()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("user {} already exist. Nothing will be done", $r13);

        goto label4;

     label1:
        shoppingCart = interfaceinvoke userRoles.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke shoppingCart.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke shoppingCart.<java.util.Iterator: java.lang.Object next()>();

        ur = (com.bookstore.domain.security.UserRole) $r8;

        $r9 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.RoleRepository roleRepository>;

        $r10 = virtualinvoke ur.<com.bookstore.domain.security.UserRole: com.bookstore.domain.security.Role getRole()>();

        interfaceinvoke $r9.<com.bookstore.repository.RoleRepository: java.lang.Object save(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r2 = virtualinvoke user.<com.bookstore.domain.User: java.util.Set getUserRoles()>();

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(userRoles);

        $r3 = new com.bookstore.domain.ShoppingCart;

        specialinvoke $r3.<com.bookstore.domain.ShoppingCart: void <init>()>();

        shoppingCart = $r3;

        virtualinvoke shoppingCart.<com.bookstore.domain.ShoppingCart: void setUser(com.bookstore.domain.User)>(user);

        virtualinvoke user.<com.bookstore.domain.User: void setShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke user.<com.bookstore.domain.User: void setUserShippingList(java.util.List)>($r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        virtualinvoke user.<com.bookstore.domain.User: void setUserPaymentList(java.util.List)>($r5);

        $r6 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r7 = interfaceinvoke $r6.<com.bookstore.repository.UserRepository: java.lang.Object save(java.lang.Object)>(user);

        localUser = (com.bookstore.domain.User) $r7;

     label4:
        return localUser;
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: createUser
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.User user, localUser;
        java.util.Set userRoles, $r2;
        com.bookstore.domain.security.UserRole ur;
        com.bookstore.repository.UserRepository $r0, $r6;
        java.lang.String $r1, $r13;
        boolean $z0;
        com.bookstore.domain.ShoppingCart $r3, shoppingCart;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r7, $r8;
        com.bookstore.repository.RoleRepository $r9;
        com.bookstore.domain.security.Role $r10;
        org.slf4j.Logger $r12;
        java.util.Iterator shoppingCart;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        user := @parameter0: com.bookstore.domain.User;

        userRoles := @parameter1: java.util.Set;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = virtualinvoke user.<com.bookstore.domain.User: java.lang.String getUsername()>();

        localUser = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        if localUser == null goto label1;

        $r12 = <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG>;

        $r13 = virtualinvoke user.<com.bookstore.domain.User: java.lang.String getUsername()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("user {} already exist. Nothing will be done", $r13);

        goto label4;

     label1:
        shoppingCart = interfaceinvoke userRoles.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke shoppingCart.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke shoppingCart.<java.util.Iterator: java.lang.Object next()>();

        ur = (com.bookstore.domain.security.UserRole) $r8;

        $r9 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.RoleRepository roleRepository>;

        $r10 = virtualinvoke ur.<com.bookstore.domain.security.UserRole: com.bookstore.domain.security.Role getRole()>();

        interfaceinvoke $r9.<com.bookstore.repository.RoleRepository: java.lang.Object save(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r2 = virtualinvoke user.<com.bookstore.domain.User: java.util.Set getUserRoles()>();

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(userRoles);

        $r3 = new com.bookstore.domain.ShoppingCart;

        specialinvoke $r3.<com.bookstore.domain.ShoppingCart: void <init>()>();

        shoppingCart = $r3;

        virtualinvoke shoppingCart.<com.bookstore.domain.ShoppingCart: void setUser(com.bookstore.domain.User)>(user);

        virtualinvoke user.<com.bookstore.domain.User: void setShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke user.<com.bookstore.domain.User: void setUserShippingList(java.util.List)>($r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        virtualinvoke user.<com.bookstore.domain.User: void setUserPaymentList(java.util.List)>($r5);

        $r6 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r7 = interfaceinvoke $r6.<com.bookstore.repository.UserRepository: java.lang.Object save(java.lang.Object)>(user);

        localUser = (com.bookstore.domain.User) $r7;

     label4:
        return localUser;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder internalTransform called!
java.lang.RuntimeException: No method com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set) in class com.bookstore.service.impl.UserServiceImpl
	at soot.SootClass.getMethod(SootClass.java:348)
	at soot.SootClass.getMethod(SootClass.java:378)
	at dbridge.analysis.eqsql.FuncStackInfoBuilder.internalTransformHelper(FuncStackInfoBuilder.java:176)
	at dbridge.analysis.eqsql.FuncStackInfoBuilder.internalTransform(FuncStackInfoBuilder.java:151)
	at soot.SceneTransformer.transform(SceneTransformer.java:39)
	at soot.Transform.apply(Transform.java:90)
	at soot.ScenePack.internalApply(ScenePack.java:40)
	at soot.Pack.apply(Pack.java:118)
	at soot.PackManager.runWholeProgramPacks(PackManager.java:579)
	at soot.PackManager.runPacksNormally(PackManager.java:469)
	at soot.PackManager.runPacks(PackManager.java:398)
	at dbridge.analysis.eqsql.EqSQLDriver.getExpr(EqSQLDriver.java:108)
	at dbridge.analysis.eqsql.EqSQLDriver.doEqSQLRewrite(EqSQLDriver.java:234)
	at dbridge.analysis.eqsql.EqSQLDriverTest.inferSummary(EqSQLDriverTest.java:85)
	at dbridge.analysis.eqsql.EqSQLDriverTest.main(EqSQLDriverTest.java:69)

Decompiling com.bookstore.service.impl.UserServiceImpl... 
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void <init>()>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>()
    {
        com.bookstore.service.impl.UserServiceImpl this;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        specialinvoke this.<java.lang.Object: void <init>()>();

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.security.PasswordResetToken getPasswordResetToken(java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getPasswordResetToken
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.security.PasswordResetToken getPasswordResetToken(java.lang.String)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.String token;
        com.bookstore.repository.PasswordResetTokenRepository $r0;
        com.bookstore.domain.security.PasswordResetToken $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        token := @parameter0: java.lang.String;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.PasswordResetTokenRepository passwordResetTokenRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.PasswordResetTokenRepository: com.bookstore.domain.security.PasswordResetToken findByToken(java.lang.String)>(token);

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void createPasswordResetTokenForUser(com.bookstore.domain.User,java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: createPasswordResetTokenForUser
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void createPasswordResetTokenForUser(com.bookstore.domain.User, java.lang.String)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.User user;
        java.lang.String token;
        com.bookstore.domain.security.PasswordResetToken myToken, $r0;
        com.bookstore.repository.PasswordResetTokenRepository $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        user := @parameter0: com.bookstore.domain.User;

        token := @parameter1: java.lang.String;

        $r0 = new com.bookstore.domain.security.PasswordResetToken;

        specialinvoke $r0.<com.bookstore.domain.security.PasswordResetToken: void <init>(java.lang.String,com.bookstore.domain.User)>(token, user);

        myToken = $r0;

        $r1 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.PasswordResetTokenRepository passwordResetTokenRepository>;

        interfaceinvoke $r1.<com.bookstore.repository.PasswordResetTokenRepository: java.lang.Object save(java.lang.Object)>($r0);

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByUsername(java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: findByUsername
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.User findByUsername(java.lang.String)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.String username;
        com.bookstore.repository.UserRepository $r0;
        com.bookstore.domain.User $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        username := @parameter0: java.lang.String;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>(username);

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User findByEmail(java.lang.String)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: findByEmail
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.User findByEmail(java.lang.String)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.String email;
        com.bookstore.repository.UserRepository $r0;
        com.bookstore.domain.User $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        email := @parameter0: java.lang.String;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByEmail(java.lang.String)>(email);

        return $r1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User,java.util.Set)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: createUser
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.User user, localUser;
        java.util.Set userRoles, $r2;
        com.bookstore.domain.security.UserRole ur;
        com.bookstore.repository.UserRepository $r0, $r6;
        java.lang.String $r1, $r13;
        boolean $z0;
        com.bookstore.domain.ShoppingCart $r3, shoppingCart;
        java.util.ArrayList $r4, $r5;
        java.lang.Object $r7, $r8;
        com.bookstore.repository.RoleRepository $r9;
        com.bookstore.domain.security.Role $r10;
        org.slf4j.Logger $r12;
        java.util.Iterator shoppingCart;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        user := @parameter0: com.bookstore.domain.User;

        userRoles := @parameter1: java.util.Set;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = virtualinvoke user.<com.bookstore.domain.User: java.lang.String getUsername()>();

        localUser = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        if localUser == null goto label1;

        $r12 = <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG>;

        $r13 = virtualinvoke user.<com.bookstore.domain.User: java.lang.String getUsername()>();

        interfaceinvoke $r12.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object)>("user {} already exist. Nothing will be done", $r13);

        goto label4;

     label1:
        shoppingCart = interfaceinvoke userRoles.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke shoppingCart.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke shoppingCart.<java.util.Iterator: java.lang.Object next()>();

        ur = (com.bookstore.domain.security.UserRole) $r8;

        $r9 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.RoleRepository roleRepository>;

        $r10 = virtualinvoke ur.<com.bookstore.domain.security.UserRole: com.bookstore.domain.security.Role getRole()>();

        interfaceinvoke $r9.<com.bookstore.repository.RoleRepository: java.lang.Object save(java.lang.Object)>($r10);

        goto label2;

     label3:
        $r2 = virtualinvoke user.<com.bookstore.domain.User: java.util.Set getUserRoles()>();

        interfaceinvoke $r2.<java.util.Set: boolean addAll(java.util.Collection)>(userRoles);

        $r3 = new com.bookstore.domain.ShoppingCart;

        specialinvoke $r3.<com.bookstore.domain.ShoppingCart: void <init>()>();

        shoppingCart = $r3;

        virtualinvoke $r3.<com.bookstore.domain.ShoppingCart: void setUser(com.bookstore.domain.User)>(user);

        virtualinvoke user.<com.bookstore.domain.User: void setShoppingCart(com.bookstore.domain.ShoppingCart)>($r3);

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke user.<com.bookstore.domain.User: void setUserShippingList(java.util.List)>($r4);

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        virtualinvoke user.<com.bookstore.domain.User: void setUserPaymentList(java.util.List)>($r5);

        $r6 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r7 = interfaceinvoke $r6.<com.bookstore.repository.UserRepository: java.lang.Object save(java.lang.Object)>(user);

        localUser = (com.bookstore.domain.User) $r7;

     label4:
        return localUser;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User save(com.bookstore.domain.User)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: save
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.bookstore.domain.User save(com.bookstore.domain.User)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.User user, $r2;
        com.bookstore.repository.UserRepository $r0;
        java.lang.Object $r1;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        user := @parameter0: com.bookstore.domain.User;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserRepository userRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserRepository: java.lang.Object save(java.lang.Object)>(user);

        $r2 = (com.bookstore.domain.User) $r1;

        return $r2;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void updateUserBilling(com.bookstore.domain.UserBilling,com.bookstore.domain.UserPayment,com.bookstore.domain.User)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateUserBilling
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void updateUserBilling(com.bookstore.domain.UserBilling, com.bookstore.domain.UserPayment, com.bookstore.domain.User)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.UserBilling userBilling;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.domain.User user;
        java.util.List $r0;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        userBilling := @parameter0: com.bookstore.domain.UserBilling;

        userPayment := @parameter1: com.bookstore.domain.UserPayment;

        user := @parameter2: com.bookstore.domain.User;

        virtualinvoke userPayment.<com.bookstore.domain.UserPayment: void setUser(com.bookstore.domain.User)>(user);

        virtualinvoke userPayment.<com.bookstore.domain.UserPayment: void setUserBilling(com.bookstore.domain.UserBilling)>(userBilling);

        virtualinvoke userPayment.<com.bookstore.domain.UserPayment: void setDefaultPayment(boolean)>(1);

        virtualinvoke userBilling.<com.bookstore.domain.UserBilling: void setUserPayment(com.bookstore.domain.UserPayment)>(userPayment);

        $r0 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserPaymentList()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(userPayment);

        virtualinvoke this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User save(com.bookstore.domain.User)>(user);

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void setUserDefaultPayment(java.lang.Long,com.bookstore.domain.User)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setUserDefaultPayment
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setUserDefaultPayment(java.lang.Long, com.bookstore.domain.User)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.Long defaultPaymentId, $r3;
        com.bookstore.domain.User user;
        java.util.List userPaymentList;
        java.util.Iterator l4;
        com.bookstore.domain.UserPayment userPayment;
        com.bookstore.repository.UserPaymentRepository $r0, $r4, $r6;
        java.lang.Iterable $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        defaultPaymentId := @parameter0: java.lang.Long;

        user := @parameter1: com.bookstore.domain.User;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserPaymentRepository userPaymentRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserPaymentRepository: java.lang.Iterable findAll()>();

        userPaymentList = (java.util.List) $r1;

        l4 = interfaceinvoke userPaymentList.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        userPayment = (com.bookstore.domain.UserPayment) $r2;

        $r3 = virtualinvoke userPayment.<com.bookstore.domain.UserPayment: java.lang.Long getId()>();

        if $r3 != defaultPaymentId goto label2;

        virtualinvoke userPayment.<com.bookstore.domain.UserPayment: void setDefaultPayment(boolean)>(1);

        $r6 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserPaymentRepository userPaymentRepository>;

        interfaceinvoke $r6.<com.bookstore.repository.UserPaymentRepository: java.lang.Object save(java.lang.Object)>(userPayment);

        goto label3;

     label2:
        virtualinvoke userPayment.<com.bookstore.domain.UserPayment: void setDefaultPayment(boolean)>(0);

        $r4 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserPaymentRepository userPaymentRepository>;

        interfaceinvoke $r4.<com.bookstore.repository.UserPaymentRepository: java.lang.Object save(java.lang.Object)>(userPayment);

     label3:
        goto label1;

     label4:
        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void updateUserShipping(com.bookstore.domain.UserShipping,com.bookstore.domain.User)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: updateUserShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void updateUserShipping(com.bookstore.domain.UserShipping, com.bookstore.domain.User)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        com.bookstore.domain.UserShipping userShipping;
        com.bookstore.domain.User user;
        java.util.List $r0;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        userShipping := @parameter0: com.bookstore.domain.UserShipping;

        user := @parameter1: com.bookstore.domain.User;

        virtualinvoke userShipping.<com.bookstore.domain.UserShipping: void setUser(com.bookstore.domain.User)>(user);

        virtualinvoke userShipping.<com.bookstore.domain.UserShipping: void setUserShippingDefault(boolean)>(1);

        $r0 = virtualinvoke user.<com.bookstore.domain.User: java.util.List getUserShippingList()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(userShipping);

        virtualinvoke this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User save(com.bookstore.domain.User)>(user);

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void setUserDefaultShipping(java.lang.Long,com.bookstore.domain.User)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: setUserDefaultShipping
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void setUserDefaultShipping(java.lang.Long, com.bookstore.domain.User)
    {
        com.bookstore.service.impl.UserServiceImpl this;
        java.lang.Long defaultShippingId, $r3;
        com.bookstore.domain.User user;
        java.util.List userShippingList;
        java.util.Iterator l4;
        com.bookstore.domain.UserShipping userShipping;
        com.bookstore.repository.UserShippingRepository $r0, $r4, $r6;
        java.lang.Iterable $r1;
        boolean $z0;
        java.lang.Object $r2;

        this := @this: com.bookstore.service.impl.UserServiceImpl;

        defaultShippingId := @parameter0: java.lang.Long;

        user := @parameter1: com.bookstore.domain.User;

        $r0 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserShippingRepository userShippingRepository>;

        $r1 = interfaceinvoke $r0.<com.bookstore.repository.UserShippingRepository: java.lang.Iterable findAll()>();

        userShippingList = (java.util.List) $r1;

        l4 = interfaceinvoke userShippingList.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke l4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke l4.<java.util.Iterator: java.lang.Object next()>();

        userShipping = (com.bookstore.domain.UserShipping) $r2;

        $r3 = virtualinvoke userShipping.<com.bookstore.domain.UserShipping: java.lang.Long getId()>();

        if $r3 != defaultShippingId goto label2;

        virtualinvoke userShipping.<com.bookstore.domain.UserShipping: void setUserShippingDefault(boolean)>(1);

        $r6 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserShippingRepository userShippingRepository>;

        interfaceinvoke $r6.<com.bookstore.repository.UserShippingRepository: java.lang.Object save(java.lang.Object)>(userShipping);

        goto label3;

     label2:
        virtualinvoke userShipping.<com.bookstore.domain.UserShipping: void setUserShippingDefault(boolean)>(0);

        $r4 = this.<com.bookstore.service.impl.UserServiceImpl: com.bookstore.repository.UserShippingRepository userShippingRepository>;

        interfaceinvoke $r4.<com.bookstore.repository.UserShippingRepository: java.lang.Object save(java.lang.Object)>(userShipping);

     label3:
        goto label1;

     label4:
        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.bookstore.service.impl.UserServiceImpl: void <clinit>()>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <clinit>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.bookstore.service.impl.UserServiceImpl
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.bookstore.service.impl.UserServiceImpl: com.bookstore.domain.User createUser(com.bookstore.domain.User, java.util.Set)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.bookstore
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "com/bookstore/service/impl/UserService");

        <com.bookstore.service.impl.UserServiceImpl: org.slf4j.Logger LOG> = $r0;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FAILURE
starttime, test: 1664400048117
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: org.springframework.web.bind.annotation.RequestMapping is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: org.springframework.web.bind.annotation.GetMapping is a phantom class!
Warning: org.springframework.web.bind.annotation.PostMapping is a phantom class!
Warning: java.security.Principal is a phantom class!
Warning: javax.persistence.Transient is a phantom class!
Warning: org.springframework.web.multipart.MultipartFile is a phantom class!
    public java.lang.String shoppingCart(org.springframework.ui.Model, java.security.Principal)
    {
        com.bookstore.controller.ShoppingCartController this;
        org.springframework.ui.Model model;
        java.security.Principal principal;
        com.bookstore.domain.User user;
        com.bookstore.domain.ShoppingCart shoppingCart;
        com.bookstore.service.impl.UserService $r0;
        java.lang.String $r1;
        com.bookstore.service.impl.CartItemService $r2;
        com.bookstore.service.impl.ShoppingCartService $r3;

        this := @this: com.bookstore.controller.ShoppingCartController;

        model := @parameter0: org.springframework.ui.Model;

        principal := @parameter1: java.security.Principal;

        $r0 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.bookstore.service.impl.UserService: com.bookstore.domain.User findByUsername(java.lang.String)>($r1);

        shoppingCart = virtualinvoke user.<com.bookstore.domain.User: com.bookstore.domain.ShoppingCart getShoppingCart()>();

        $r2 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.CartItemService cartItemService>;

        interfaceinvoke $r2.<com.bookstore.service.impl.CartItemService: java.util.List findByShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        $r3 = this.<com.bookstore.controller.ShoppingCartController: com.bookstore.service.impl.ShoppingCartService shoppingCartService>;

        interfaceinvoke $r3.<com.bookstore.service.impl.ShoppingCartService: com.bookstore.domain.ShoppingCart updateShoppingCart(com.bookstore.domain.ShoppingCart)>(shoppingCart);

        return "shoppingCart";
    }

java.lang.RuntimeException: Phase jtp.ServiceAllocTransform already in pack
	at soot.Pack.add(Pack.java:60)
	at dbridge.analysis.eqsql.EqSQLDriver.getExpr(EqSQLDriver.java:98)
	at dbridge.analysis.eqsql.EqSQLDriver.doEqSQLRewrite(EqSQLDriver.java:234)
	at dbridge.analysis.eqsql.EqSQLDriverTest.testDoEqSQLRewrite(EqSQLDriverTest.java:119)
	at dbridge.analysis.eqsql.EqSQLDriverTest.main(EqSQLDriverTest.java:73)
FAILURE
