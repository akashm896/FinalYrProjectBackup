EqSQLDriverTest.java: main(): Got the bench-dir option value: target/classes
EqSQLDriverTest.java: main(): Got the controllersig option value: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
EqSQLDriverTest.java: main(): Got the repo option value: $r0.postRepository
github/Utils.java: getAbsBenchDir(): pwd: /home/akash/Study/3rd sem/Dbridge_NRA/DbridgeNRA
starttime, test: 1666868083963
EqSQLDriver.java: doSetEntryPoints: inputPath is target/classes
Warning: java.lang.Object is a phantom class!
Warning: org.springframework.beans.factory.annotation.Autowired is a phantom class!
Warning: org.springframework.web.bind.annotation.RequestMapping is a phantom class!
Warning: org.springframework.validation.BindingResult is a phantom class!
Warning: org.springframework.stereotype.Controller is a phantom class!
Warning: org.springframework.ui.Model is a phantom class!
Warning: java.security.Principal is a phantom class!
Warning: java.lang.Long is a phantom class!
Warning: java.util.Optional is a phantom class!
Warning: java.lang.StringBuilder is a phantom class!
Warning: java.lang.String is a phantom class!
Warning: javax.persistence.Entity is a phantom class!
Warning: javax.persistence.ManyToOne is a phantom class!
Warning: org.hibernate.annotations.CreationTimestamp is a phantom class!
Warning: java.util.Date is a phantom class!
Warning: javax.persistence.JoinColumn is a phantom class!
Warning: java.util.Collection is a phantom class!
Warning: javax.persistence.OneToMany is a phantom class!
Warning: javax.validation.constraints.NotNull is a phantom class!
Warning: javax.persistence.Column is a phantom class!
Warning: javax.persistence.Table is a phantom class!
Warning: javax.persistence.GeneratedValue is a phantom class!
Warning: javax.persistence.Temporal is a phantom class!
Warning: org.hibernate.validator.constraints.NotEmpty is a phantom class!
Warning: javax.persistence.Id is a phantom class!
Warning: org.hibernate.validator.constraints.Length is a phantom class!
Warning: javax.persistence.JoinTable is a phantom class!
Warning: org.hibernate.validator.constraints.Email is a phantom class!
Warning: com.fasterxml.jackson.annotation.JsonIgnore is a phantom class!
Warning: javax.persistence.ManyToMany is a phantom class!
Warning: org.springframework.data.domain.Page is a phantom class!
Warning: java.lang.Throwable is a phantom class!
Warning: java.lang.Void is a phantom class!
Warning: java.lang.Float is a phantom class!
Warning: java.lang.Double is a phantom class!
Warning: java.lang.AssertionError is a phantom class!
Warning: java.lang.Integer is a phantom class!
Warning: java.lang.NullPointerException is a phantom class!
Warning: java.lang.Character is a phantom class!
Warning: java.lang.Short is a phantom class!
Warning: java.lang.StringBuffer is a phantom class!
Warning: java.lang.Boolean is a phantom class!
Warning: java.lang.Class is a phantom class!
Warning: java.lang.Byte is a phantom class!
Warning: java.lang.NoClassDefFoundError is a phantom class!
Warning: java.lang.IndexOutOfBoundsException is a phantom class!
Warning: java.lang.StackOverflowError is a phantom class!
Warning: java.lang.invoke.LambdaMetafactory is a phantom class!
Warning: java.lang.Error is a phantom class!
Warning: java.lang.AbstractMethodError is a phantom class!
Warning: java.lang.ClassCastException is a phantom class!
Warning: java.lang.Runnable is a phantom class!
Warning: java.lang.VerifyError is a phantom class!
Warning: java.lang.NoSuchFieldError is a phantom class!
Warning: java.lang.IllegalMonitorStateException is a phantom class!
Warning: java.lang.Thread is a phantom class!
Warning: java.lang.UnknownError is a phantom class!
Warning: java.lang.InternalError is a phantom class!
Warning: java.lang.ArithmeticException is a phantom class!
Warning: java.lang.NegativeArraySizeException is a phantom class!
Warning: java.lang.ClassCircularityError is a phantom class!
Warning: java.lang.Cloneable is a phantom class!
Warning: java.lang.ref.Finalizer is a phantom class!
Warning: java.lang.LinkageError is a phantom class!
Warning: java.lang.IncompatibleClassChangeError is a phantom class!
Warning: java.lang.NoSuchMethodError is a phantom class!
Warning: java.lang.RuntimeException is a phantom class!
Warning: java.lang.ArrayIndexOutOfBoundsException is a phantom class!
Warning: java.lang.ThreadDeath is a phantom class!
Warning: java.io.Serializable is a phantom class!
Warning: java.lang.InstantiationError is a phantom class!
Warning: java.lang.IllegalAccessError is a phantom class!
Warning: java.lang.ClassNotFoundException is a phantom class!
Warning: java.lang.ClassFormatError is a phantom class!
Warning: java.lang.UnsatisfiedLinkError is a phantom class!
Warning: java.lang.ArrayStoreException is a phantom class!
Warning: java.lang.ExceptionInInitializerError is a phantom class!
Warning: java.lang.OutOfMemoryError is a phantom class!
patternMatch.java: getUserInputRules: i=0
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (save <repo> <list1>) (save <repo> <list2>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <init_val> <coll>) (union (pi (select <coll> <cond>) <list1>) (pi (select <coll> (= <cond> 0)) <list2>)))
Fold
| FuncExpr
| | Ternary
| | | Any
| | | Save
| | | | Any
| | | | Any
| | | Save
| | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:10
| | Id:11
| Union
| | Project
| | | Select
| | | | Id:11
| | | | Id:3
| | | Id:6
| | Project
| | | Select
| | | | Id:11
| | | | Eq
| | | | | Id:3
| | | | | Zero
| | | Id:9

{<repo>=8, <list2>=9, <cond>=3, <list1>=6, <init_val>=10, <itr>=12, <coll>=11}
patternMatch.java: getUserInputRules: i=2
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (? <cond> (add_all_fields <list>) <elseval>)) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi (select <coll> <cond>) <list>) <init_val>)
Fold
| FuncExpr
| | Ternary
| | | Any
| | | AddWithFieldExprs
| | | | Any
| | | Any
| Any
| Any
| Any


Union
| Project
| | Select
| | | Id:21
| | | Id:16
| | Id:18
| Id:20

{<list>=18, <elseval>=19, <repo>=8, <list2>=9, <cond>=16, <list1>=6, <init_val>=20, <itr>=22, <coll>=21}
patternMatch.java: getUserInputRules: i=4
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (save <repo> (tuple (join next <join_right>) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (- <repo> (select <repo> (in id (pi (join <coll> <join_right>) id)))) (pi <list> (join <coll> <join_right>)))
Fold
| FuncExpr
| | Save
| | | Any
| | | Tuple
| | | | Join
| | | | | Iterator
| | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| RelMinus
| | Id:26
| | Select
| | | Id:26
| | | In
| | | | Id
| | | | Project
| | | | | Join
| | | | | | Id:33
| | | | | | Id:30
| | | | | Id
| Project
| | Id:31
| | Join
| | | Id:33
| | | Id:30

{<list>=31, <elseval>=19, <repo>=26, <list2>=9, <cond>=16, <list1>=6, <init_val>=32, <join_right>=30, <itr>=34, <coll>=33}
patternMatch.java: getUserInputRules: i=6
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (add_all_fields <receiver> (tuple (select <rel> (= <clm> <itr>)) <list>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (union (pi <list> (select <rel> (in <clm> <coll>))) <init_val>)
Fold
| FuncExpr
| | AddWithFieldExprs
| | | Any
| | | Tuple
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


Union
| Project
| | Id:45
| | Select
| | | Id:41
| | | In
| | | | Id:43
| | | | Id:47
| Id:46

{<list>=45, <rel>=41, <repo>=26, <cond>=16, <clm>=43, <init_val>=46, <join_right>=30, <itr>=48, <receiver>=38, <elseval>=19, <list2>=9, <list1>=6, <coll>=47}
patternMatch.java: getUserInputRules: i=8
patternMatch.java: getUserInputRules: ruleInput: (loop (body_expr (+ <aggvar> (pi (select <rel> (= <clm> <itr>)) <clmagg>))) <init_val> <coll> <itr>)
patternMatch.java: getUserInputRules: rule output: (+ (agg_sum (select <rel> (in <clm> <coll>)) <clmagg>) <init_val>)
Fold
| FuncExpr
| | ArithAdd
| | | Any
| | | Project
| | | | Select
| | | | | Any
| | | | | Eq
| | | | | | Any
| | | | | | Any
| | | | Any
| Any
| Any
| Any


ArithAdd
| AggSum
| | Select
| | | Id:55
| | | In
| | | | Id:57
| | | | Id:61
| | Id:59
| Id:60

{<list>=45, <rel>=55, <repo>=26, <cond>=16, <clm>=57, <init_val>=60, <join_right>=30, <itr>=62, <clmagg>=59, <receiver>=38, <aggvar>=52, <elseval>=19, <list2>=9, <list1>=6, <coll>=61}
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Dbridge_NRA/DbridgeNRA/lib/eqsql.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/home/akash/Study/3rd%20sem/Dbridge_NRA/DbridgeNRA/lib/soot-trunk-1.0.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.SimpleLoggerFactory]
ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: createNewPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String createNewPost(com.reljicd.model.Post, org.springframework.validation.BindingResult)
    {
        com.reljicd.controller.PostController this;
        com.reljicd.model.Post post;
        org.springframework.validation.BindingResult bindingResult;
        boolean $z0;
        com.reljicd.service.PostService $r0;
        java.lang.StringBuilder $r2, $r3, $r6;
        com.reljicd.model.User $r4;
        java.lang.String $r5, $r7;

        this := @this: com.reljicd.controller.PostController;

        post := @parameter0: com.reljicd.model.Post;

        bindingResult := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "/postForm";

     label1:
        $r0 = this.<com.reljicd.controller.PostController: com.reljicd.service.PostService postService>;

        interfaceinvoke $r0.<com.reljicd.service.PostService: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");

        $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();

        $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.reljicd.controller.PostController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogErrorController
Warning: org.springframework.boot.autoconfigure.web.ErrorController is a phantom class!
Warning: org.springframework.web.servlet.ModelAndView is a phantom class!
Warning: org.springframework.web.bind.annotation.GetMapping is a phantom class!
Warning: org.springframework.web.bind.annotation.RestController is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.autoconfigure.web.ErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.CommentController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.RegistrationController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.LoginController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.util.Pager
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.BlogDemoApplication
Warning: org.springframework.boot.SpringApplication is a phantom class!
Warning: org.springframework.boot.autoconfigure.SpringBootApplication is a phantom class!
Warning: org.springframework.context.ConfigurableApplicationContext is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Comment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.MyAccessDeniedHandler
Warning: org.springframework.security.web.access.AccessDeniedHandler is a phantom class!
Warning: org.slf4j.Logger is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: org.slf4j.LoggerFactory is a phantom class!
Warning: java.io.IOException is a phantom class!
Warning: org.springframework.security.access.AccessDeniedException is a phantom class!
Warning: org.springframework.stereotype.Component is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: org.springframework.security.core.context.SecurityContext is a phantom class!
Warning: org.springframework.security.core.context.SecurityContextHolder is a phantom class!
Warning: org.springframework.security.core.Authentication is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.web.access.AccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.SpringSecurityConfig
Warning: org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter is a phantom class!
Warning: org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.provisioning.InMemoryUserDetailsManagerConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExceptionHandlingConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.builders.HttpSecurity is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer is a phantom class!
Warning: org.springframework.beans.factory.annotation.Value is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.CsrfConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.FormLoginConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.provisioning.JdbcUserDetailsManagerConfigurer is a phantom class!
Warning: javax.sql.DataSource is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$ExpressionInterceptUrlRegistry is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.LogoutConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.userdetails.AbstractDaoAuthenticationConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.authentication.configurers.provisioning.UserDetailsManagerConfigurer$UserDetailsBuilder is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.HeadersConfigurer$FrameOptionsConfig is a phantom class!
Warning: java.lang.Exception is a phantom class!
Warning: org.springframework.context.annotation.Configuration is a phantom class!
Warning: org.springframework.security.config.annotation.SecurityBuilder is a phantom class!
Warning: org.springframework.security.crypto.password.PasswordEncoder is a phantom class!
Warning: org.springframework.security.config.annotation.web.HttpSecurityBuilder is a phantom class!
Warning: org.springframework.context.annotation.Bean is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.AbstractAuthenticationFilterConfigurer is a phantom class!
Warning: org.springframework.security.config.annotation.web.configurers.ExpressionUrlAuthorizationConfigurer$AuthorizedUrl is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.GlobalExceptionHandler
Warning: org.springframework.web.bind.annotation.ControllerAdvice is a phantom class!
Warning: org.springframework.web.bind.annotation.ExceptionHandler is a phantom class!
Warning: org.springframework.web.bind.annotation.ResponseStatus is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.RoleRepository
Warning: org.springframework.data.jpa.repository.JpaRepository is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.PostRepository
Warning: org.springframework.data.domain.Pageable is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.CommentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.PostServiceImp
Warning: org.springframework.data.domain.PageRequest is a phantom class!
Warning: org.springframework.stereotype.Service is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.CommentServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.UserServiceImp
Warning: java.lang.CharSequence is a phantom class!
Warning: java.util.List is a phantom class!
Warning: java.util.Collections is a phantom class!
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.reljicd.service.impl.PostServiceImp]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = post := @parameter0: com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = bindingResult := @parameter1: org.springframework.validation.BindingResult
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = bindingResult
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/postForm"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r0.<com.reljicd.service.PostService: com.reljicd.model.Post save(com.reljicd.model.Post)>(post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r0.<com.reljicd.service.PostService: com.reljicd.model.Post save(com.reljicd.model.Post)>(post)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.reljicd.controller.PostController: com.reljicd.service.PostService postService>, <com.reljicd.controller.PostController: com.reljicd.service.UserService userService>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new java.lang.StringBuilder
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return $r7
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String createNewPost(com.reljicd.model.Post, org.springframework.validation.BindingResult)
    {
        com.reljicd.controller.PostController this;
        com.reljicd.model.Post post;
        org.springframework.validation.BindingResult bindingResult;
        boolean $z0;
        com.reljicd.service.PostService $r0;
        java.lang.StringBuilder $r2, $r3, $r6;
        com.reljicd.model.User $r4;
        java.lang.String $r5, $r7;

        this := @this: com.reljicd.controller.PostController;

        post := @parameter0: com.reljicd.model.Post;

        bindingResult := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "/postForm";

     label1:
        $r0 = new com.reljicd.service.impl.PostServiceImp;

        virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");

        $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();

        $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

FuncStackInfoBuilder internalTransform called!
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: body: 
    public java.lang.String createNewPost(com.reljicd.model.Post, org.springframework.validation.BindingResult)
    {
        com.reljicd.controller.PostController this;
        com.reljicd.model.Post post;
        org.springframework.validation.BindingResult bindingResult;
        boolean $z0;
        com.reljicd.service.PostService $r0;
        java.lang.StringBuilder $r2, $r3, $r6;
        com.reljicd.model.User $r4;
        java.lang.String $r5, $r7;

        this := @this: com.reljicd.controller.PostController;

        post := @parameter0: com.reljicd.model.Post;

        bindingResult := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "/postForm";

     label1:
        $r0 = new com.reljicd.service.impl.PostServiceImp;

        virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");

        $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();

        $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: post
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: post
FuncStackInfoBuilder.java: regionTreeForBody(): local: bindingResult
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: bindingResult
FuncStackInfoBuilder.java: regionTreeForBody(): local: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $z0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r3
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r4
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r5
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r6
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r7
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: createNewPost is Block 0:
[preds: ] [succs: 1 2 ]
this := @this: com.reljicd.controller.PostController;
post := @parameter0: com.reljicd.model.Post;
bindingResult := @parameter1: org.springframework.validation.BindingResult;
$z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();
if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp;

Block 1:
[preds: 0 ] [succs: ]
return "/postForm";

Block 2:
[preds: 0 ] [succs: ]
$r0 = new com.reljicd.service.impl.PostServiceImp;
virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);
this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");
$r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();
$r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
return $r7;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
0 -> 1
0 -> 2
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
dfsVisit: start = 1
dfsVisit: start = 2
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [1, 2, 0]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 1
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [1]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 1
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 1
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [1]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 1
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [1]
StructuralAnalysis.java: structuralAnalysis(): break point!
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 2
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [2]
WARN: StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = null

StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: header = 2
StructuralAnalysis.java: reachUnderSet(): reachUnderSet: backedgenodes: []
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: root: 2
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: reachUnderSet: [2]
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: root = 2
StructuralAnalysis.java: cyclicRegionType(): cyclicRegionType: reachUnder = [2]
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: currVer = 0
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going down phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: going up phase
StructuralAnalysis.java: acyclicRegionType(): acyclicRegionType: computed vset = [0]
StructuralAnalysis.java: acyclicRegionType(): ayclicRegionType: ret = IfThenElse

StructuralAnalysis.java: reduce(): newAbsRegionVertex: R_IfThenElse0
StructuralAnalysis.java: replace(): v: 0
StructuralAnalysis.java: replace(): v: 1
StructuralAnalysis.java: replace(): v: 2
StructuralAnalyis.java: compact(): compact: vset = [0, 1, 2]
StructuralAnalyis.java: compact(): compact: g.vertices before: [1, 2, 0]
StructuralAnalyis.java: compact(): compact: postCtr before: 2
StructuralAnalyis.java: compact(): compact: dfsPostOrder before: [1, 2, 0]
removeVertices: vset = [0, 1, 2]
removeVertices: v = 0
removeVertex: adj = {1=[], 2=[], 0=[1, 2]}
removeVertex: incoming = {1=[0], 2=[0], 0=[]}
removeVertex: v = 0
removeVertices: v = 1
removeVertex: adj = {1=[], 2=[]}
removeVertex: incoming = {1=[], 2=[]}
removeVertex: v = 1
removeVertices: v = 2
removeVertex: adj = {2=[]}
removeVertex: incoming = {2=[]}
removeVertex: v = 2
StructuralAnalyis.java: compact(): compact: g.vertices after: [R_IfThenElse0]
StructuralAnalyis.java: compact(): compact: postCtr after: 0
StructuralAnalyis.java: compact(): compact: dfsPostOrder after: [R_IfThenElse0]
StructuralAnalysis.java: reduce(): structType before: {}
StructuralAnalysis.java: reduce(): structType after: {R_IfThenElse0=IfThenElse}
StructuralAnalysis.java: structuralAnalysis(): structType: {R_IfThenElse0=IfThenElse}
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {R_IfThenElse0=[0, 1, 2]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_IfThenElse0, 2=R_IfThenElse0, 0=R_IfThenElse0}
StructuralAnalysis.java: controlTreeRoot(): found root = R_IfThenElse0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- R_IfThenElse0
|  +- 0
|  +- 1
|  +- 2

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: 1 2 ]
this := @this: com.reljicd.controller.PostController;
post := @parameter0: com.reljicd.model.Post;
bindingResult := @parameter1: org.springframework.validation.BindingResult;
$z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();
if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp;

Block 1:
[preds: 0 ] [succs: ]
return "/postForm";

Block 2:
[preds: 0 ] [succs: ]
$r0 = new com.reljicd.service.impl.PostServiceImp;
virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);
this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;
$r2 = new java.lang.StringBuilder;
specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();
$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");
$r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();
$r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();
$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);
$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();
return $r7;


StructuralAnalysis.java: controlTreeRoot(): control tree = {R_IfThenElse0=[0, 1, 2]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {1=R_IfThenElse0, 2=R_IfThenElse0, 0=R_IfThenElse0}
StructuralAnalysis.java: controlTreeRoot(): found root = R_IfThenElse0
FuncStackInfoBuilder: createARegionTree(): structType = {R_IfThenElse0=IfThenElse}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
FuncStackInfoBuilder: createARegionTree(): structType = {R_IfThenElse0=IfThenElse, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 1
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 1
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 1
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, R_IfThenElse0=IfThenElse, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 2
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 2
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 2
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
FuncStackInfoBuilder: createARegionTree(): structType = {1=BasicBlock, 2=BasicBlock, R_IfThenElse0=IfThenElse, 0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = R_IfThenElse0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 3
FuncStackInfoBuilder: createARegionTree(): ifte childregions =[| BasicBlock0, | BasicBlock1, | BasicBlock2]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = R_IfThenElse0
FuncStackInfoBuilder.java: regionTreeForBody(): | IfThenElse
| | BasicBlock0
| | BasicBlock1
| | BasicBlock2

FuncStackInfoBuilder.java: internalTransformHelper(): topr is not null
FuncStackInfoBuilder.java: internalTransformHelper(): topr = 
| IfThenElse
| | BasicBlock0
| | BasicBlock1
| | BasicBlock2

FuncStackInfoBuilder.java: internalTransformHelper(): CGSTART: 
VIRTUAL edge: virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post) in <com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)> ==> <com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>
SPECIAL edge: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() in <com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)> ==> <java.lang.StringBuilder: void <init>()>
VIRTUAL edge: $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>() in <com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)> ==> <com.reljicd.model.Post: com.reljicd.model.User getUser()>
VIRTUAL edge: $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>() in <com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)> ==> <com.reljicd.model.User: java.lang.String getUsername()>
CGEND

FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: save
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.reljicd.model.Post save(com.reljicd.model.Post)
    {
        com.reljicd.service.impl.PostServiceImp this;
        com.reljicd.model.Post post, $r2;
        com.reljicd.repository.PostRepository $r0;
        java.lang.Object $r1;

        this := @this: com.reljicd.service.impl.PostServiceImp;

        post := @parameter0: com.reljicd.model.Post;

        $r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>;

        $r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post);

        $r2 = (com.reljicd.model.Post) $r1;

        return $r2;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: post
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: post
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r1
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r2
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: save is Block 0:
[preds: ] [succs: ]
this := @this: com.reljicd.service.impl.PostServiceImp;
post := @parameter0: com.reljicd.model.Post;
$r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>;
$r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post);
$r2 = (com.reljicd.model.Post) $r1;
return $r2;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.reljicd.service.impl.PostServiceImp;
post := @parameter0: com.reljicd.model.Post;
$r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>;
$r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post);
$r2 = (com.reljicd.model.Post) $r1;
return $r2;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.reljicd.service.impl.PostServiceImp, post := @parameter0: com.reljicd.model.Post, $r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>, $r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post), $r2 = (com.reljicd.model.Post) $r1, return $r2]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.reljicd.model.User: java.lang.String getUsername()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getUsername
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String getUsername()
    {
        com.reljicd.model.User this;
        java.lang.String $r0;

        this := @this: com.reljicd.model.User;

        $r0 = this.<com.reljicd.model.User: java.lang.String username>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getUsername is Block 0:
[preds: ] [succs: ]
this := @this: com.reljicd.model.User;
$r0 = this.<com.reljicd.model.User: java.lang.String username>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.reljicd.model.User;
$r0 = this.<com.reljicd.model.User: java.lang.String username>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.reljicd.model.User, $r0 = this.<com.reljicd.model.User: java.lang.String username>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = com.reljicd.model.Post: com.reljicd.model.User getUser()
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getUser
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public com.reljicd.model.User getUser()
    {
        com.reljicd.model.Post this;
        com.reljicd.model.User $r0;

        this := @this: com.reljicd.model.Post;

        $r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>;

        return $r0;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackInfoBuilder.java: regionTreeForBody(): local: this
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: this
FuncStackInfoBuilder.java: regionTreeForBody(): local: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): local tags: $r0
FuncStackInfoBuilder.java: regionTreeForBody(): bbg for method: getUser is Block 0:
[preds: ] [succs: ]
this := @this: com.reljicd.model.Post;
$r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>;
return $r0;


FuncStackInfoBuilder.java: regionTreeForBody(): cfgdot: digraph {
}

StructuralAnalysis.java: structuralAnalysis(): Start vertex: 0
dfsVisit: start = 0
StructuralAnalysis.java: structuralAnalysis(): structuralAnalysis: initial dfspostorder: [0]
FuncStackInfoBuilder.java: regionTreeForBody(): PRINTING Control Tree
StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): 
+- 0

FuncStackInfoBuilder.java: regionTreeForBody(): bbg = Block 0:
[preds: ] [succs: ]
this := @this: com.reljicd.model.Post;
$r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>;
return $r0;


StructuralAnalysis.java: controlTreeRoot(): control tree = {0=[]}
StructuralAnalysis.java: controlTreeRoot(): parent map = {}
StructuralAnalysis.java: controlTreeRoot(): found root = 0
FuncStackInfoBuilder: createARegionTree(): structType = {0=BasicBlock}
FuncStackInfoBuilder: createARegionTree(): ctRoot = 0
FuncStackInfoBuilder: createARegionTree(): childRegions.length: 0
FuncStackInfoBuilder: createARegionTree(): ctRoot.dat: 0
FuncStackInfoBuilder: createARegionTree(): Created bb region, num: 0
FuncStackInfoBuilder: createARegionTree(): bb units: [this := @this: com.reljicd.model.Post, $r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>, return $r0]
FuncStackInfoBuilder.java: regionTreeForBody(): created region tree for root = 0
FuncStackInfoBuilder.java: regionTreeForBody(): | BasicBlock0
FuncStackInfoBuilder.java: internalTransformHelper(): FSIB: InternalTransformHelper: calleeStr = java.lang.StringBuilder: void <init>()
FuncStackInfoBuilder.java: internalTransformHelper(): FuncStackInfoBuilder.java: functionstack: 
FuncStackInfoBuilder.java: internalTransformHelper():     com.reljicd.model.Post: com.reljicd.model.User getUser()
FuncStackInfoBuilder.java: internalTransformHelper():     com.reljicd.model.User: java.lang.String getUsername()
FuncStackInfoBuilder.java: internalTransformHelper():     com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
FuncStackInfoBuilder.java: internalTransformHelper():     com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
FuncStackInfoBuilder.java: internalTransformHelper(): {com.reljicd.model.Post: com.reljicd.model.User getUser()=    public com.reljicd.model.User getUser()
    {
        com.reljicd.model.Post this;
        com.reljicd.model.User $r0;

        this := @this: com.reljicd.model.Post;

        $r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>;

        return $r0;
    }
, com.reljicd.model.User: java.lang.String getUsername()=    public java.lang.String getUsername()
    {
        com.reljicd.model.User this;
        java.lang.String $r0;

        this := @this: com.reljicd.model.User;

        $r0 = this.<com.reljicd.model.User: java.lang.String username>;

        return $r0;
    }
, com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)=    public java.lang.String createNewPost(com.reljicd.model.Post, org.springframework.validation.BindingResult)
    {
        com.reljicd.controller.PostController this;
        com.reljicd.model.Post post;
        org.springframework.validation.BindingResult bindingResult;
        boolean $z0;
        com.reljicd.service.PostService $r0;
        java.lang.StringBuilder $r2, $r3, $r6;
        com.reljicd.model.User $r4;
        java.lang.String $r5, $r7;

        this := @this: com.reljicd.controller.PostController;

        post := @parameter0: com.reljicd.model.Post;

        bindingResult := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "/postForm";

     label1:
        $r0 = new com.reljicd.service.impl.PostServiceImp;

        virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");

        $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();

        $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
, com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)=    public com.reljicd.model.Post save(com.reljicd.model.Post)
    {
        com.reljicd.service.impl.PostServiceImp this;
        com.reljicd.model.Post post, $r2;
        com.reljicd.repository.PostRepository $r0;
        java.lang.Object $r1;

        this := @this: com.reljicd.service.impl.PostServiceImp;

        post := @parameter0: com.reljicd.model.Post;

        $r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>;

        $r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post);

        $r2 = (com.reljicd.model.Post) $r1;

        return $r2;
    }
}

Decompiling com.reljicd.controller.PostController... 
ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: void <init>(com.reljicd.service.PostService,com.reljicd.service.UserService)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: <init>
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public void <init>(com.reljicd.service.PostService, com.reljicd.service.UserService)
    {
        com.reljicd.controller.PostController this;
        com.reljicd.service.PostService postService;
        com.reljicd.service.UserService userService;

        this := @this: com.reljicd.controller.PostController;

        postService := @parameter0: com.reljicd.service.PostService;

        userService := @parameter1: com.reljicd.service.UserService;

        specialinvoke this.<java.lang.Object: void <init>()>();

        this.<com.reljicd.controller.PostController: com.reljicd.service.PostService postService> = postService;

        this.<com.reljicd.controller.PostController: com.reljicd.service.UserService userService> = userService;

        return;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: java.lang.String newPost(java.security.Principal,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: newPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String newPost(java.security.Principal, org.springframework.ui.Model)
    {
        com.reljicd.controller.PostController this;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        java.util.Optional user;
        com.reljicd.model.Post post, $r2;
        com.reljicd.service.UserService $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Object $r3;
        com.reljicd.model.User $r4;

        this := @this: com.reljicd.controller.PostController;

        principal := @parameter0: java.security.Principal;

        model := @parameter1: org.springframework.ui.Model;

        $r0 = this.<com.reljicd.controller.PostController: com.reljicd.service.UserService userService>;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = interfaceinvoke $r0.<com.reljicd.service.UserService: java.util.Optional findByUsername(java.lang.String)>($r1);

        $z0 = virtualinvoke user.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r2 = new com.reljicd.model.Post;

        specialinvoke $r2.<com.reljicd.model.Post: void <init>()>();

        post = $r2;

        $r3 = virtualinvoke user.<java.util.Optional: java.lang.Object get()>();

        $r4 = (com.reljicd.model.User) $r3;

        virtualinvoke $r2.<com.reljicd.model.Post: void setUser(com.reljicd.model.User)>($r4);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", $r2);

        return "/postForm";

     label1:
        return "/error";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.reljicd.controller.PostController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.autoconfigure.web.ErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.CommentController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.RegistrationController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.LoginController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.util.Pager
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.BlogDemoApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Comment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.MyAccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.web.access.AccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.SpringSecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.GlobalExceptionHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.PostRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.CommentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.CommentServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.reljicd.service.impl.UserServiceImp]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter0: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter1: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = user = interfaceinvoke $r0.<com.reljicd.service.UserService: java.util.Optional findByUsername(java.lang.String)>($r1)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.reljicd.controller.PostController: com.reljicd.service.UserService userService>, <com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = virtualinvoke user.<java.util.Optional: boolean isPresent()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = specialinvoke $r2.<com.reljicd.model.Post: void <init>()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = post = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = virtualinvoke user.<java.util.Optional: java.lang.Object get()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r4 = (com.reljicd.model.User) $r3
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = virtualinvoke $r2.<com.reljicd.model.Post: void setUser(com.reljicd.model.User)>($r4)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", $r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", $r2)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/postForm"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String newPost(java.security.Principal, org.springframework.ui.Model)
    {
        com.reljicd.controller.PostController this;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        java.util.Optional user;
        com.reljicd.model.Post post, $r2;
        com.reljicd.service.UserService $r0;
        java.lang.String $r1;
        boolean $z0;
        java.lang.Object $r3;
        com.reljicd.model.User $r4;

        this := @this: com.reljicd.controller.PostController;

        principal := @parameter0: java.security.Principal;

        model := @parameter1: org.springframework.ui.Model;

        $r0 = new com.reljicd.service.impl.UserServiceImp;

        $r1 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        user = virtualinvoke $r0.<com.reljicd.service.impl.UserServiceImp: java.util.Optional findByUsername(java.lang.String)>($r1);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.UserServiceImp userServiceImpl> = $r0;

        $z0 = virtualinvoke user.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label1;

        $r2 = new com.reljicd.model.Post;

        specialinvoke $r2.<com.reljicd.model.Post: void <init>()>();

        post = $r2;

        $r3 = virtualinvoke user.<java.util.Optional: java.lang.Object get()>();

        $r4 = (com.reljicd.model.User) $r3;

        virtualinvoke $r2.<com.reljicd.model.Post: void setUser(com.reljicd.model.User)>($r4);

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", $r2);

        return "/postForm";

     label1:
        return "/error";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: createNewPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String createNewPost(com.reljicd.model.Post, org.springframework.validation.BindingResult)
    {
        com.reljicd.controller.PostController this;
        com.reljicd.model.Post post;
        org.springframework.validation.BindingResult bindingResult;
        boolean $z0;
        com.reljicd.service.PostService $r0;
        java.lang.StringBuilder $r2, $r3, $r6;
        com.reljicd.model.User $r4;
        java.lang.String $r5, $r7;

        this := @this: com.reljicd.controller.PostController;

        post := @parameter0: com.reljicd.model.Post;

        bindingResult := @parameter1: org.springframework.validation.BindingResult;

        $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>();

        if $z0 == 0 goto label1;

        return "/postForm";

     label1:
        $r0 = new com.reljicd.service.impl.PostServiceImp;

        virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/");

        $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();

        $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: java.lang.String editPostWithId(java.lang.Long,java.security.Principal,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: editPostWithId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String editPostWithId(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = this.<com.reljicd.controller.PostController: com.reljicd.service.PostService postService>;

        optionalPost = interfaceinvoke $r0.<com.reljicd.service.PostService: java.util.Optional findForId(java.lang.Long)>(id);

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post);

        return "/postForm";

     label1:
        return "/403";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.reljicd.controller.PostController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.autoconfigure.web.ErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.CommentController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.RegistrationController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.LoginController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.util.Pager
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.BlogDemoApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Comment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.MyAccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.web.access.AccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.SpringSecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.GlobalExceptionHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.PostRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.CommentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.CommentServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.reljicd.service.impl.PostServiceImp]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = optionalPost = interfaceinvoke $r0.<com.reljicd.service.PostService: java.util.Optional findForId(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl>, <com.reljicd.controller.PostController: com.reljicd.service.impl.UserServiceImp userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = post = (com.reljicd.model.Post) $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z1 == 0 goto return "/403"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/postForm"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/403"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String editPostWithId(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = new com.reljicd.service.impl.PostServiceImp;

        optionalPost = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: java.util.Optional findForId(java.lang.Long)>(id);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post);

        return "/postForm";

     label1:
        return "/403";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: java.lang.String getPostWithId(java.lang.Long,java.security.Principal,org.springframework.ui.Model)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: getPostWithId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String getPostWithId(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.lang.String $r3;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = this.<com.reljicd.controller.PostController: com.reljicd.service.PostService postService>;

        optionalPost = interfaceinvoke $r0.<com.reljicd.service.PostService: java.util.Optional findForId(java.lang.Long)>(id);

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post);

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("username", $r3);

     label1:
        return "/post";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.reljicd.controller.PostController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.autoconfigure.web.ErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.CommentController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.RegistrationController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.LoginController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.util.Pager
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.BlogDemoApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Comment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.MyAccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.web.access.AccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.SpringSecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.GlobalExceptionHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.PostRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.CommentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.CommentServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.reljicd.service.impl.PostServiceImp]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = model := @parameter2: org.springframework.ui.Model
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = optionalPost = interfaceinvoke $r0.<com.reljicd.service.PostService: java.util.Optional findForId(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl>, <com.reljicd.controller.PostController: com.reljicd.service.impl.UserServiceImp userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = post = (com.reljicd.model.Post) $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z1 == 0 goto return "/post"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r3 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = principal
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("username", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("username", $r3)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = model
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/post"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String getPostWithId(java.lang.Long, java.security.Principal, org.springframework.ui.Model)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        org.springframework.ui.Model model;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0;
        boolean $z0, $z1;
        java.lang.Object $r1;
        java.lang.String $r3;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        model := @parameter2: org.springframework.ui.Model;

        $r0 = new com.reljicd.service.impl.PostServiceImp;

        optionalPost = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: java.util.Optional findForId(java.lang.Long)>(id);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("post", post);

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        $r3 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        interfaceinvoke model.<org.springframework.ui.Model: org.springframework.ui.Model addAttribute(java.lang.String,java.lang.Object)>("username", $r3);

     label1:
        return "/post";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: java.lang.String deletePostWithId(java.lang.Long,java.security.Principal)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: deletePostWithId
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    public java.lang.String deletePostWithId(java.lang.Long, java.security.Principal)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0, $r2;
        boolean $z0, $z1;
        java.lang.Object $r1;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        $r0 = this.<com.reljicd.controller.PostController: com.reljicd.service.PostService postService>;

        optionalPost = interfaceinvoke $r0.<com.reljicd.service.PostService: java.util.Optional findForId(java.lang.Long)>(id);

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        $r2 = this.<com.reljicd.controller.PostController: com.reljicd.service.PostService postService>;

        interfaceinvoke $r2.<com.reljicd.service.PostService: void delete(com.reljicd.model.Post)>(post);

        return "redirect:/home";

     label1:
        return "/403";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.reljicd.controller.PostController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.autoconfigure.web.ErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.CommentController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.RegistrationController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.LoginController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.util.Pager
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.BlogDemoApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Comment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.MyAccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.web.access.AccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.SpringSecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.GlobalExceptionHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.PostRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.CommentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.CommentServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): Application Classes: [com.reljicd.controller.PostController]
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.BlogErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.boot.autoconfigure.web.ErrorController
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.CommentController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.RegistrationController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.HomeController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.controller.LoginController
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.util.Pager
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.BlogDemoApplication
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Comment
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.User
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Post
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.model.Role
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.MyAccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.security.web.access.AccessDeniedHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.SpringSecurityConfig
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.config.GlobalExceptionHandler
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.RoleRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.PostRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.CommentRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.repository.UserRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = org.springframework.data.jpa.repository.JpaRepository
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implementation found: com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): $r2 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.CommentServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.impl.UserServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): interface implemented = com.reljicd.service.UserService
ServiceAllocTransform.java: instrumentServiceImplementations(): rhsValType =com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): com.reljicd.service.CommentService
ServiceAllocTransform.java: instrumentServiceImplementations(): service list = [$r0=com.reljicd.service.impl.PostServiceImp, $r2=com.reljicd.service.impl.PostServiceImp]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = optionalPost = interfaceinvoke $r0.<com.reljicd.service.PostService: java.util.Optional findForId(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl>, <com.reljicd.controller.PostController: com.reljicd.service.impl.UserServiceImp userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = post = (com.reljicd.model.Post) $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z1 == 0 goto return "/403"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.reljicd.service.PostService: void delete(com.reljicd.model.Post)>(post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.reljicd.service.PostService: void delete(com.reljicd.model.Post)>(post)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "redirect:/home"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/403"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String deletePostWithId(java.lang.Long, java.security.Principal)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0, $r2;
        boolean $z0, $z1;
        java.lang.Object $r1;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.reljicd.service.impl.PostServiceImp;

        optionalPost = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: java.util.Optional findForId(java.lang.Long)>(id);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        $r2 = new com.reljicd.service.impl.PostServiceImp;

        interfaceinvoke $r2.<com.reljicd.service.PostService: void delete(com.reljicd.model.Post)>(post);

        return "redirect:/home";

     label1:
        return "/403";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service var = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): implementation class = com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): iterating through all units to find service.method() invoke statements
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this := @this: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = id := @parameter0: java.lang.Long
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = principal := @parameter1: java.security.Principal
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIdentityStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r0 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = optionalPost = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: java.util.Optional findForId(java.lang.Long)>(id)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z0 == 0 goto return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>()
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = post = (com.reljicd.model.Post) $r1
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = if $z1 == 0 goto return "/403"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JIfStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = $r2 = new com.reljicd.service.impl.PostServiceImp
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JAssignStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = interfaceinvoke $r2.<com.reljicd.service.PostService: void delete(com.reljicd.model.Post)>(post)
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JInvokeStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): Found a interface invoke. Case: stmt instanceof InterfaceInvokeExpr. stmt: interfaceinvoke $r2.<com.reljicd.service.PostService: void delete(com.reljicd.model.Post)>(post)
ServiceAllocTransform.java: instrumentServiceImplementations(): invoke base = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): left = $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): Break
ServiceAllocTransform.java: instrumentServiceImplementations(): fields of class of method: [<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl>, <com.reljicd.controller.PostController: com.reljicd.service.impl.UserServiceImp userServiceImpl>]
ServiceAllocTransform.java: instrumentServiceImplementations(): service var: $r2
ServiceAllocTransform.java: instrumentServiceImplementations(): service var type: com.reljicd.service.PostService
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "redirect:/home"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/403"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): cst = return "/error"
ServiceAllocTransform.java: instrumentServiceImplementations(): class of cst: class soot.jimple.internal.JReturnStmt
ServiceAllocTransform.java: instrumentServiceImplementations(): body AFTER service replacement with its implementation
    public java.lang.String deletePostWithId(java.lang.Long, java.security.Principal)
    {
        com.reljicd.controller.PostController this;
        java.lang.Long id;
        java.security.Principal principal;
        java.util.Optional optionalPost;
        com.reljicd.model.Post post;
        com.reljicd.service.PostService $r0, $r2;
        boolean $z0, $z1;
        java.lang.Object $r1;

        this := @this: com.reljicd.controller.PostController;

        id := @parameter0: java.lang.Long;

        principal := @parameter1: java.security.Principal;

        $r0 = new com.reljicd.service.impl.PostServiceImp;

        optionalPost = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: java.util.Optional findForId(java.lang.Long)>(id);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0;

        $z0 = virtualinvoke optionalPost.<java.util.Optional: boolean isPresent()>();

        if $z0 == 0 goto label2;

        $r1 = virtualinvoke optionalPost.<java.util.Optional: java.lang.Object get()>();

        post = (com.reljicd.model.Post) $r1;

        $z1 = specialinvoke this.<com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>(principal, post);

        if $z1 == 0 goto label1;

        $r2 = new com.reljicd.service.impl.PostServiceImp;

        virtualinvoke $r2.<com.reljicd.service.impl.PostServiceImp: void delete(com.reljicd.model.Post)>(post);

        this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r2;

        return "redirect:/home";

     label1:
        return "/403";

     label2:
        return "/error";
    }

ServiceAllocTransform.java: internalTransform(): methodsig: <com.reljicd.controller.PostController: boolean isPrincipalOwnerOfPost(java.security.Principal,com.reljicd.model.Post)>
ServiceAllocTransform.java: instrumentServiceImplementations(): body methodname: isPrincipalOwnerOfPost
ServiceAllocTransform.java: instrumentServiceImplementations(): class of method: com.reljicd.controller.PostController
ServiceAllocTransform.java: instrumentServiceImplementations(): currCaseSig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
ServiceAllocTransform.java: instrumentServiceImplementations(): package prefix: com.reljicd
ServiceAllocTransform.java: instrumentServiceImplementations(): body before service replacement with its implementation: 
    private boolean isPrincipalOwnerOfPost(java.security.Principal, com.reljicd.model.Post)
    {
        com.reljicd.controller.PostController this;
        java.security.Principal principal;
        com.reljicd.model.Post post;
        java.lang.String $r0, $r2;
        com.reljicd.model.User $r1;
        boolean $z0, $z1;

        this := @this: com.reljicd.controller.PostController;

        principal := @parameter0: java.security.Principal;

        post := @parameter1: com.reljicd.model.Post;

        if principal == null goto label1;

        $r0 = interfaceinvoke principal.<java.security.Principal: java.lang.String getName()>();

        $r1 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>();

        $r2 = virtualinvoke $r1.<com.reljicd.model.User: java.lang.String getUsername()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

ServiceAllocTransform.java: instrumentServiceImplementations(): service list = []
FuncStackAnalyzer.java: constructDIRForStack(): FSA: constructDIRsForStack: Stack = [com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.model.Post: com.reljicd.model.User getUser()]
FuncStackAnalyzer.java: constructDIRForStack(): top function sig: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
FuncStackAnalyzer.java: constructDIRForStack(): body rootmethod before analysis: [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
FuncStackAnalyzer.java: constructDIRForStack(): Top level func i.e. com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)has typemap: {}
DIRIfThenElseRegionAnalyzer.java: constructDIR(): region tree: | IfThenElse
| | BasicBlock0
| | BasicBlock1
| | BasicBlock2

DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock0
DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock1
DIRIfThenElseRegionAnalyzer.java: constructDIR(): | BasicBlock2
DIRIfThenElseRegionAnalyzer.java: constructDIR(): Break point!
ARegion.java: analyze(): set cur method of analyzer to: createNewPost
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.reljicd.controller.PostController
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = post := @parameter0: com.reljicd.model.Post
DIRRegionAnalyzer.java: constructDIR(): curUnit = bindingResult := @parameter1: org.springframework.validation.BindingResult
DIRRegionAnalyzer.java: constructDIR(): curUnit = $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = hasErrors
construct/Utils.java: parseInvokeExpr(): methodSignature = org.springframework.validation.BindingResult: boolean hasErrors()
construct/Utils.java: parseObjectInvoke(): interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <org.springframework.validation.BindingResult: boolean hasErrors()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <org.springframework.validation.BindingResult: boolean hasErrors()>
construct/Utils.java: parseObjectInvoke(): methodName = hasErrors
construct/Utils.java: parseObjectInvoke(): invokeExpr = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = org.springframework.validation.BindingResult: boolean hasErrors()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
construct/Utils.java: parseObjectInvoke(): method wont handle 4
DIRRegionAnalyzer.java: constructDIR(): Wont handle this method
DIRRegionAnalyzer.java: constructDIR(): curUnit = if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp
IfStmtCons.java: construct(): condition (got from sootstmt.getCondition()$z0 == 0
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: condition=Equals
| MethodWontHandleOp
| 0
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $z0=MethodWontHandleOp
ARegion.java: analyze(): set cur method of analyzer to: createNewPost
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 1
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
DIRRegionAnalyzer.java: constructDIR(): curUnit = return "/postForm"
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock1
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ return ~~~
"/postForm"


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ return ~~~
"/postForm"


DIR.java: updateRegion(): update region entry: return="/postForm"
ARegion.java: analyze(): set cur method of analyzer to: createNewPost
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 2
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.reljicd.controller.PostController, post := @parameter0: com.reljicd.model.Post, bindingResult := @parameter1: org.springframework.validation.BindingResult, $z0 = interfaceinvoke bindingResult.<org.springframework.validation.BindingResult: boolean hasErrors()>(), if $z0 == 0 goto $r0 = new com.reljicd.service.impl.PostServiceImp, return "/postForm", $r0 = new com.reljicd.service.impl.PostServiceImp, virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post), this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0, $r2 = new java.lang.StringBuilder, specialinvoke $r2.<java.lang.StringBuilder: void <init>()>(), $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/"), $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>(), $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>(), $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5), $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>(), return $r7]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = new com.reljicd.service.impl.PostServiceImp
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
DIRRegionAnalyzer.java: constructDIR(): curUnit = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post)
DIRRegionAnalyzer.java: handleSideEffects(): methodname: save
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [post, this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [post, $r0]
ARegion.java: analyze(): set cur method of analyzer to: save
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.reljicd.service.impl.PostServiceImp, post := @parameter0: com.reljicd.model.Post, $r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>, $r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post), $r2 = (com.reljicd.model.Post) $r1, return $r2]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.reljicd.service.impl.PostServiceImp
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = post := @parameter0: com.reljicd.model.Post
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<com.reljicd.service.impl.PostServiceImp: com.reljicd.repository.PostRepository postRepository>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.postRepository
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r1 = interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInterfaceInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): savestmt invoke expr: interfaceinvoke $r0.<com.reljicd.repository.PostRepository: java.lang.Object saveAndFlush(java.lang.Object)>(post)
DIRRegionAnalyzer.java: constructDIR(): baseVarNode: $r0
DIRRegionAnalyzer.java: constructDIR(): dir till now: ~~~ $r0 ~~~
this.postRepository

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): ve map:{$r0=this.postRepository, this=Self}
DIRRegionAnalyzer.java: constructDIR(): repo: this.postRepository
DIRRegionAnalyzer.java: constructDIR(): argType: com.reljicd.model.Post
DIRRegionAnalyzer.java: constructDIR(): table: com.reljicd.model.Post
DIRRegionAnalyzer.java: constructDIR(): attributes: [id, title, body, createDate]
DIRRegionAnalyzer.java: constructDIR(): fieldVarNodes: [post.id, post.title, post.body, post.createDate]
DIRRegionAnalyzer.java: constructDIR(): listNode.columns: [id, title, body, createDate]
DIRRegionAnalyzer.java: constructDIR(): mapping: this.postRepository -> Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: constructDIR(): savestmt args: [post]
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = (com.reljicd.model.Post) $r1
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JCastExpr
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = (type1) v2
DIRRegionAnalyzer.java: constructDIR(): type1: com.reljicd.model.Post
DIRRegionAnalyzer.java: constructDIR(): castExpr: (com.reljicd.model.Post) $r1
DIRRegionAnalyzer.java: constructDIR(): v2: $r1
DIRRegionAnalyzer.java: constructDIR(): cur dir: {$r0=this.postRepository, this=Self, this.postRepository=Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate}
DIRRegionAnalyzer.java: constructDIR(): rightVar in dir: false
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): v1 and v2 have diff types
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v1) = com.reljicd.model.Post
WARN: DIRRegionAnalyzer.java: processPointerAssignment(): type(v2) = java.lang.Object
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: $r2
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r1
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Post.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: post

]
AccessPath.java: replaceBase(): input access path: $r2.id
AccessPath.java: replaceBase(): replacement of base: $r1
AccessPath.java: replaceBase(): input access path: $r2.title
AccessPath.java: replaceBase(): replacement of base: $r1
AccessPath.java: replaceBase(): input access path: $r2.body
AccessPath.java: replaceBase(): replacement of base: $r1
AccessPath.java: replaceBase(): input access path: $r2.createDate
AccessPath.java: replaceBase(): replacement of base: $r1
AccessPath.java: replaceBase(): input access path: $r2.user
AccessPath.java: replaceBase(): replacement of base: $r1
AccessPath.java: replaceBase(): input access path: $r2.comments
AccessPath.java: replaceBase(): replacement of base: $r1
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r2
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: return
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r2
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [Post.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: post

]
AccessPath.java: replaceBase(): input access path: return.id
AccessPath.java: replaceBase(): replacement of base: $r2
AccessPath.java: replaceBase(): input access path: return.title
AccessPath.java: replaceBase(): replacement of base: $r2
AccessPath.java: replaceBase(): input access path: return.body
AccessPath.java: replaceBase(): replacement of base: $r2
AccessPath.java: replaceBase(): input access path: return.createDate
AccessPath.java: replaceBase(): replacement of base: $r2
AccessPath.java: replaceBase(): input access path: return.user
AccessPath.java: replaceBase(): replacement of base: $r2
AccessPath.java: replaceBase(): input access path: return.comments
AccessPath.java: replaceBase(): replacement of base: $r2
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.postRepository

~~~ $r2 ~~~
$r1

~~~ $r2.body ~~~
$r1.body

~~~ $r2.comments ~~~
$r1.comments

~~~ $r2.createDate ~~~
$r1.createDate

~~~ $r2.id ~~~
$r1.id

~~~ $r2.title ~~~
$r1.title

~~~ $r2.user ~~~
$r1.user

~~~ return ~~~
$r1

~~~ return ~~~
$r1

~~~ return.body ~~~
$r1.body

~~~ return.comments ~~~
$r1.comments

~~~ return.createDate ~~~
$r1.createDate

~~~ return.id ~~~
$r1.id

~~~ return.title ~~~
$r1.title

~~~ return.user ~~~
$r1.user

~~~ this ~~~
Self

~~~ this.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.postRepository

~~~ $r2 ~~~
$r1

~~~ $r2.body ~~~
$r1.body

~~~ $r2.comments ~~~
$r1.comments

~~~ $r2.createDate ~~~
$r1.createDate

~~~ $r2.id ~~~
$r1.id

~~~ $r2.title ~~~
$r1.title

~~~ $r2.user ~~~
$r1.user

~~~ return ~~~
$r1

~~~ return ~~~
$r1

~~~ return.body ~~~
$r1.body

~~~ return.comments ~~~
$r1.comments

~~~ return.createDate ~~~
$r1.createDate

~~~ return.id ~~~
$r1.id

~~~ return.title ~~~
$r1.title

~~~ return.user ~~~
$r1.user

~~~ this ~~~
Self

~~~ this.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIR.java: updateRegion(): update region entry: $r0=this.postRepository
DIR.java: updateRegion(): update region entry: $r2=$r1
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $r2.id=$r1.id
DIR.java: updateRegion(): update region entry: this.postRepository=Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIR.java: updateRegion(): update region entry: return.body=$r1.body
DIR.java: updateRegion(): update region entry: $r2.comments=$r1.comments
DIR.java: updateRegion(): update region entry: return.title=$r1.title
DIR.java: updateRegion(): update region entry: $r2.body=$r1.body
DIR.java: updateRegion(): update region entry: $r2.user=$r1.user
DIR.java: updateRegion(): update region entry: return.id=$r1.id
DIR.java: updateRegion(): update region entry: $r2.createDate=$r1.createDate
DIR.java: updateRegion(): update region entry: return.createDate=$r1.createDate
DIR.java: updateRegion(): update region entry: return.comments=$r1.comments
DIR.java: updateRegion(): update region entry: $r2.title=$r1.title
DIR.java: updateRegion(): update region entry: return=$r1
DIR.java: updateRegion(): update region entry: return.user=$r1.user
DIR.java: updateRegion(): update region entry: return=$r1
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: post
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.reljicd.model.Post
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: post
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: post
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [post.id, post.title, post.body, post.createDate, post.user, post.comments]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: post.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: post.title
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: post.body
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: post.user
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: post.comments
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.reljicd.service.impl.PostServiceImp
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r0
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.postRepository]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, $r2, this, $r2.id, this.postRepository, return.body, $r2.comments, return.title, $r2.body, $r2.user, return.id, $r2.createDate, return.createDate, return.comments, $r2.title, return, return.user, return]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r0.<com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>(post)
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [post, this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post, $r0]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [post.id, post.title, post.body, post.createDate, post.user, post.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.postRepository]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = save, [$r0.postRepository]
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: post
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: post
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [post.id, post.title, post.body, post.createDate, post.user, post.comments]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r0
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.postRepository]
DIRRegionAnalyzer.java: handleSideEffects(): callee: com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)
DIRRegionAnalyzer.java: handleSideEffects(): callee dir: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIRRegionAnalyzer.java: handleSideEffects(): for key = $r0.postRepository
DIRRegionAnalyzer.java: handleSideEffects(): eedag before formaltoactual: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: handleSideEffects(): after: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIRRegionAnalyzer.java: constructDIR(): curUnit = this.<com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl> = $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): CASE: v.f = expr, f is non-primtive
Flatten.java: prependBaseToAccp: var instance of fieldref
Flatten.java: prependBaseToAccp: fieldtostring: <com.reljicd.controller.PostController: com.reljicd.service.impl.PostServiceImp postServiceImpl>
DIRRegionAnalyzer.java: constructDIR(): accessPaths = [this.postServiceImpl.postRepository]
DIRRegionAnalyzer.java: constructDIR(): right val = $r0
DIRRegionAnalyzer.java: constructDIR(): Subcase: v1.f = v2
AccessPath.java: replaceBase(): input access path: this.postServiceImpl.postRepository
AccessPath.java: replaceBase(): replacement of base: $r0
DIRRegionAnalyzer.java: constructDIR(): Mapped: this.postServiceImpl.postRepository -> $r0.postRepository
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r2 = new java.lang.StringBuilder
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JNewExpr
Utils.java: getVarNode(): $r2
Utils.java: getVarNode(): LinkedVariableBox($r2)
DIRRegionAnalyzer.java: constructDIR(): curUnit = specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1.foo(v2)
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: <init>
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = java.lang.StringBuilder: void <init>()

WARN: DIRRegionAnalyzer.java: handleSideEffects(): Wont handle method
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r3
Utils.java: getVarNode(): LinkedVariableBox($r3)
JAssignStmtCons.java: construct(): virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("redirect:/blog/")
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r4 = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getUser
construct/Utils.java: parseInvokeExpr(): methodSignature = com.reljicd.model.Post: com.reljicd.model.User getUser()
construct/Utils.java: parseObjectInvoke(): virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <com.reljicd.model.Post: com.reljicd.model.User getUser()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.reljicd.model.Post: com.reljicd.model.User getUser()>
construct/Utils.java: parseObjectInvoke(): methodName = getUser
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = com.reljicd.model.Post: com.reljicd.model.User getUser()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getUser
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.reljicd.model.Post, $r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.reljicd.model.Post
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<com.reljicd.model.Post: com.reljicd.model.User user>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: valIsRepository(): fpar val: this.<com.reljicd.model.Post: com.reljicd.model.User user>
DIRRegionAnalyzer.java: valIsRepository(): refType: com.reljicd.model.User
DIRRegionAnalyzer.java: valIsRepository(): valClass: com.reljicd.model.User
DIRRegionAnalyzer.java: valIsRepository(): ret: false
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is not primitive
DIRRegionAnalyzer.java: constructDIR(): destPaths: [$r0.id, $r0.email, $r0.password, $r0.username, $r0.name, $r0.lastName, $r0.active, $r0.roles, $r0.posts]
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.id
AccessPath.java: replaceBase(): input access path: $r0.id
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.id
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.id
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.id -> this.user.id
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.email
AccessPath.java: replaceBase(): input access path: $r0.email
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.email
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.id ~~~
this.user.id

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.email
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.email -> this.user.email
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.password
AccessPath.java: replaceBase(): input access path: $r0.password
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.password
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.password
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.password -> this.user.password
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.username
AccessPath.java: replaceBase(): input access path: $r0.username
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.username
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.password ~~~
this.user.password

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.username
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.username -> this.user.username
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.name
AccessPath.java: replaceBase(): input access path: $r0.name
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.name
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.password ~~~
this.user.password

~~~ $r0.username ~~~
this.user.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.name
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.name -> this.user.name
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.lastName
AccessPath.java: replaceBase(): input access path: $r0.lastName
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.username ~~~
this.user.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.lastName -> this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.active
AccessPath.java: replaceBase(): input access path: $r0.active
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.active
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.username ~~~
this.user.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.active
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.active -> this.user.active
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.roles
AccessPath.java: replaceBase(): input access path: $r0.roles
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.roles
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.username ~~~
this.user.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.roles
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.roles -> this.user.roles
DIRRegionAnalyzer.java: constructDIR(): destination accp: $r0.posts
AccessPath.java: replaceBase(): input access path: $r0.posts
AccessPath.java: replaceBase(): replacement of base: this.user
DIRRegionAnalyzer.java: constructDIR(): source accp: this.user.posts
DIRRegionAnalyzer.java: constructDIR(): dir before resolving rhsVN (case v1 = v2.f, f not primitive)
DIRRegionAnalyzer.java: constructDIR(): ~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): resolvedAccp after resolution (case v1 = v2.f, f not primitive): this.user.posts
DIRRegionAnalyzer.java: constructDIR(): mapping $r0.posts -> this.user.posts
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: processPointerAssignment(): lhs of pointer assignment: return
DIRRegionAnalyzer.java: processPointerAssignment(): rhs of pointer assignment: $r0
DIRRegionAnalyzer.java: processPointerAssignment(): soot class tags: [User.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user

]
AccessPath.java: replaceBase(): input access path: return.id
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.email
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.password
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.username
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.name
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.lastName
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.active
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.roles
AccessPath.java: replaceBase(): replacement of base: $r0
AccessPath.java: replaceBase(): input access path: return.posts
AccessPath.java: replaceBase(): replacement of base: $r0
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.posts ~~~
this.user.posts

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ return ~~~
this.user

~~~ return ~~~
this.user

~~~ return.active ~~~
this.user.active

~~~ return.email ~~~
this.user.email

~~~ return.id ~~~
this.user.id

~~~ return.lastName ~~~
this.user.lastName

~~~ return.name ~~~
this.user.name

~~~ return.password ~~~
this.user.password

~~~ return.posts ~~~
this.user.posts

~~~ return.roles ~~~
this.user.roles

~~~ return.username ~~~
this.user.username

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.posts ~~~
this.user.posts

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ return ~~~
this.user

~~~ return ~~~
this.user

~~~ return.active ~~~
this.user.active

~~~ return.email ~~~
this.user.email

~~~ return.id ~~~
this.user.id

~~~ return.lastName ~~~
this.user.lastName

~~~ return.name ~~~
this.user.name

~~~ return.password ~~~
this.user.password

~~~ return.posts ~~~
this.user.posts

~~~ return.roles ~~~
this.user.roles

~~~ return.username ~~~
this.user.username

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: return.posts=this.user.posts
DIR.java: updateRegion(): update region entry: $r0.email=this.user.email
DIR.java: updateRegion(): update region entry: $r0.active=this.user.active
DIR.java: updateRegion(): update region entry: $r0=this.user
DIR.java: updateRegion(): update region entry: $r0.name=this.user.name
DIR.java: updateRegion(): update region entry: return.email=this.user.email
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return.lastName=this.user.lastName
DIR.java: updateRegion(): update region entry: $r0.lastName=this.user.lastName
DIR.java: updateRegion(): update region entry: $r0.posts=this.user.posts
DIR.java: updateRegion(): update region entry: $r0.password=this.user.password
DIR.java: updateRegion(): update region entry: $r0.id=this.user.id
DIR.java: updateRegion(): update region entry: return.active=this.user.active
DIR.java: updateRegion(): update region entry: return.roles=this.user.roles
DIR.java: updateRegion(): update region entry: $r0.username=this.user.username
DIR.java: updateRegion(): update region entry: return.username=this.user.username
DIR.java: updateRegion(): update region entry: return.password=this.user.password
DIR.java: updateRegion(): update region entry: return.id=this.user.id
DIR.java: updateRegion(): update region entry: $r0.roles=this.user.roles
DIR.java: updateRegion(): update region entry: return.name=this.user.name
DIR.java: updateRegion(): update region entry: return=this.user
DIR.java: updateRegion(): update region entry: return=this.user
construct/Utils.java: parseObjectInvoke(): Put DIR of callee = com.reljicd.model.Post: com.reljicd.model.User getUser() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = com.reljicd.model.User
DIRRegionAnalyzer.java: constructDIR(): leftType : com.reljicd.model.User
DIRRegionAnalyzer.java: constructDIR(): case : caseCallPtrAsgnMethodWBody()
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3)
DIRRegionAnalyzer.java: constructDIR(): v1: $r4
DIRRegionAnalyzer.java: constructDIR(): v2.foo(v3): virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: constructDIR(): left type = com.reljicd.model.User
DIRRegionAnalyzer.java: constructDIR(): com.reljicd.model.User
DIRRegionAnalyzer.java: constructDIR(): invoke methodref rettype: com.reljicd.model.User
DIRRegionAnalyzer.java: constructDIR(): method sig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap = 
{com.reljicd.model.Post: com.reljicd.model.User getUser()=~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.posts ~~~
this.user.posts

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ return ~~~
this.user

~~~ return ~~~
this.user

~~~ return.active ~~~
this.user.active

~~~ return.email ~~~
this.user.email

~~~ return.id ~~~
this.user.id

~~~ return.lastName ~~~
this.user.lastName

~~~ return.name ~~~
this.user.name

~~~ return.password ~~~
this.user.password

~~~ return.posts ~~~
this.user.posts

~~~ return.roles ~~~
this.user.roles

~~~ return.username ~~~
this.user.username

~~~ this ~~~
Self

, com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)=~~~ $r0 ~~~
this.postRepository

~~~ $r2 ~~~
$r1

~~~ $r2.body ~~~
$r1.body

~~~ $r2.comments ~~~
$r1.comments

~~~ $r2.createDate ~~~
$r1.createDate

~~~ $r2.id ~~~
$r1.id

~~~ $r2.title ~~~
$r1.title

~~~ $r2.user ~~~
$r1.user

~~~ return ~~~
$r1

~~~ return ~~~
$r1

~~~ return.body ~~~
$r1.body

~~~ return.comments ~~~
$r1.comments

~~~ return.createDate ~~~
$r1.createDate

~~~ return.id ~~~
$r1.id

~~~ return.title ~~~
$r1.title

~~~ return.user ~~~
$r1.user

~~~ this ~~~
Self

~~~ this.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate

}
DIRRegionAnalyzer.java: constructDIR(): calleeDIR= ~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.posts ~~~
this.user.posts

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ return ~~~
this.user

~~~ return ~~~
this.user

~~~ return.active ~~~
this.user.active

~~~ return.email ~~~
this.user.email

~~~ return.id ~~~
this.user.id

~~~ return.lastName ~~~
this.user.lastName

~~~ return.name ~~~
this.user.name

~~~ return.password ~~~
this.user.password

~~~ return.posts ~~~
this.user.posts

~~~ return.roles ~~~
this.user.roles

~~~ return.username ~~~
this.user.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): check 1
DIRRegionAnalyzer.java: constructDIR(): soot class tags: [User.java, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Entity; without elements
Annotation: type: Ljavax/persistence/Table; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user

]
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user
DIRRegionAnalyzer.java: constructDIR(): leftType = com.reljicd.model.User
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getUser
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [post]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.reljicd.model.Post
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: post
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [return.posts, $r0.email, $r0.active, $r0, $r0.name, return.email, this, return.lastName, $r0.lastName, $r0.posts, $r0.password, $r0.id, return.active, return.roles, $r0.username, return.username, return.password, return.id, $r0.roles, return.name, return, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.title
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [return.posts, $r0.email, $r0.active, $r0, $r0.name, return.email, this, return.lastName, $r0.lastName, $r0.posts, $r0.password, $r0.id, return.active, return.roles, $r0.username, return.username, return.password, return.id, $r0.roles, return.name, return, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.body
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [return.posts, $r0.email, $r0.active, $r0, $r0.name, return.email, this, return.lastName, $r0.lastName, $r0.posts, $r0.password, $r0.id, return.active, return.roles, $r0.username, return.username, return.password, return.id, $r0.roles, return.name, return, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.createDate
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [return.posts, $r0.email, $r0.active, $r0, $r0.name, return.email, this, return.lastName, $r0.lastName, $r0.posts, $r0.password, $r0.id, return.active, return.roles, $r0.username, return.username, return.password, return.id, $r0.roles, return.name, return, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.user
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [return.posts, $r0.email, $r0.active, $r0, $r0.name, return.email, this, return.lastName, $r0.lastName, $r0.posts, $r0.password, $r0.id, return.active, return.roles, $r0.username, return.username, return.password, return.id, $r0.roles, return.name, return, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.comments
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [return.posts, $r0.email, $r0.active, $r0, $r0.name, return.email, this, return.lastName, $r0.lastName, $r0.posts, $r0.password, $r0.id, return.active, return.roles, $r0.username, return.username, return.password, return.id, $r0.roles, return.name, return, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getUser, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: post
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.foo(v3), type(v1) is pointer non-collection
NRA.java: processTableandFields: com.reljicd.model.User fields = [<com.reljicd.model.User: java.lang.Long id>, <com.reljicd.model.User: java.lang.String email>, <com.reljicd.model.User: java.lang.String password>, <com.reljicd.model.User: java.lang.String username>, <com.reljicd.model.User: java.lang.String name>, <com.reljicd.model.User: java.lang.String lastName>, <com.reljicd.model.User: int active>, <com.reljicd.model.User: java.util.Collection roles>, <com.reljicd.model.User: java.util.Collection posts>]
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.lang.Long id>  type=FieldData
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.lang.String email>  type=FieldData
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.lang.String password>  type=FieldData
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.lang.String username>  type=FieldData
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.lang.String name>  type=FieldData
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.lang.String lastName>  type=FieldData
NRA.java: processTableandFields: sf <com.reljicd.model.User: int active>  type=FieldData
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: user_role
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: role_id
]

]
AccessPath.java: getCollectionType: Collection field Type = com.reljicd.model.Role
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.util.Collection roles>  type=Role
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: user_role
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: role_id
]

]
AccessPath.java: getCollectionType: Collection field Type = com.reljicd.model.Role
NRA.java: getCondFromManyToMany(): tags = [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: user_role
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: role_id
]

]
NRA.java: getCondFromManyToMany(): user_id
NRA.java: getCondFromManyToMany(): role_id
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Collection<Lcom/reljicd/model/Post;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: user

]
AccessPath.java: getCollectionType: Collection field Type = com.reljicd.model.Post
NRA.java: processTableandFields: sf <com.reljicd.model.User: java.util.Collection posts>  type=Post
AccessPath.java: getCollectionType: field tags = [Signature: Ljava/util/Collection<Lcom/reljicd/model/Post;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: user

]
AccessPath.java: getCollectionType: Collection field Type = com.reljicd.model.Post
NRA.java: getCondFromOneToMany(): mappedBy= user
NRA.java: getJoinedColumn(): joined Column value=  user_id
DIRRegionAnalyzer.java: constructDIR(): going to flatten (var, type) = $r4, com.reljicd.model.User
DIRRegionAnalyzer.java: constructDIR(): accesspaths = [$r4.id, $r4.email, $r4.password, $r4.username, $r4.name, $r4.lastName, $r4.active, $r4.roles, $r4.posts]
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain = [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: constructDIR(): callee = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: constructDIR(): funcDIRMap domain contains callee = true
Flatten.java: getNestedFields(): LVAL TYPE: com.reljicd.model.User
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.lang.Long id> = java.lang.Long
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation type: Ljavax/persistence/Id; without elements
Annotation: type: Ljavax/persistence/GeneratedValue; num elems: 1 elems: 
Annotation Element: kind: e name: strategy type name: Ljavax/persistence/GenerationType; constant name: AUTO

Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id

]
Flatten.java: getNestedFields(): Id fields=id
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.lang.String email> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 3 elems: 
Annotation Element: kind: s name: name value: email
Annotation Element: kind: Z name: unique value: 1
Annotation Element: kind: Z name: nullable value: 0

Annotation: type: Lorg/hibernate/validator/constraints/Email; num elems: 1 elems: 
Annotation Element: kind: s name: message value: *Please provide a valid Email

Annotation: type: Lorg/hibernate/validator/constraints/NotEmpty; num elems: 1 elems: 
Annotation Element: kind: s name: message value: *Please provide an email

]
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.lang.String password> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 2 elems: 
Annotation Element: kind: s name: name value: password
Annotation Element: kind: Z name: nullable value: 0

Annotation: type: Lorg/hibernate/validator/constraints/Length; num elems: 2 elems: 
Annotation Element: kind: I name: min value: 5
Annotation Element: kind: s name: message value: *Your password must have at least 5 characters

Annotation: type: Lorg/hibernate/validator/constraints/NotEmpty; num elems: 1 elems: 
Annotation Element: kind: s name: message value: *Please provide your password

Annotation type: Lcom/fasterxml/jackson/annotation/JsonIgnore; without elements
]
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.lang.String username> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 3 elems: 
Annotation Element: kind: s name: name value: username
Annotation Element: kind: Z name: nullable value: 0
Annotation Element: kind: Z name: unique value: 1

Annotation: type: Lorg/hibernate/validator/constraints/Length; num elems: 2 elems: 
Annotation Element: kind: I name: min value: 5
Annotation Element: kind: s name: message value: *Your username must have at least 5 characters

Annotation: type: Lorg/hibernate/validator/constraints/NotEmpty; num elems: 1 elems: 
Annotation Element: kind: s name: message value: *Please provide your name

]
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.lang.String name> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: name

Annotation: type: Lorg/hibernate/validator/constraints/NotEmpty; num elems: 1 elems: 
Annotation Element: kind: s name: message value: *Please provide your name

]
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.lang.String lastName> = java.lang.String
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 1 elems: 
Annotation Element: kind: s name: name value: last_name

Annotation: type: Lorg/hibernate/validator/constraints/NotEmpty; num elems: 1 elems: 
Annotation Element: kind: s name: message value: *Please provide your last name

]
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: int active> = int
Flatten.java: getNestedFields(): tags= [Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/Column; num elems: 2 elems: 
Annotation Element: kind: s name: name value: active
Annotation Element: kind: Z name: nullable value: 0

]
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.util.Collection roles> = java.util.Collection
Flatten.java: getNestedFields(): tags= [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: user_role
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: role_id
]

]
Flatten.java: getNestedFields(): check *ToMany sf: roles , type = java.util.Collection
Flatten.java: getNestedFields(): Type of sf: <com.reljicd.model.User: java.util.Collection posts> = java.util.Collection
Flatten.java: getNestedFields(): tags= [Signature: Ljava/util/Collection<Lcom/reljicd/model/Post;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/OneToMany; num elems: 1 elems: 
Annotation Element: kind: s name: mappedBy value: user

]
Flatten.java: getNestedFields(): check *ToMany sf: posts , type = java.util.Collection
Flatten.java: getNestedFields(): returning: [<com.reljicd.model.User: java.util.Collection roles>, <com.reljicd.model.User: java.util.Collection posts>]
DIRRegionAnalyzer.java: constructDIR(): check nestedFields=[<com.reljicd.model.User: java.util.Collection roles>, <com.reljicd.model.User: java.util.Collection posts>]
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.roles
DIRRegionAnalyzer.java: constructDIR(): baseEntity NAme=User
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.reljicd.model.User
 fieldName= roles
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String email [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String password [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String username [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String name [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String lastName [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int active [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Collection roles [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/ManyToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/JoinTable;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;
DIRRegionAnalyzer.java: constructDIR(): nestedField Entity= com.reljicd.model.Role
DIRRegionAnalyzer.java: constructDIR(): From soot typeclass= com.reljicd.model.Role
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.roles
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.roles
DIRRegionAnalyzer.java: constructDIR(): key= return.roles
 value= this.user.roles
NRA.java: getJoinCondFromField(): ManyToMany Field
NRA.java: getCondFromManyToMany(): tags = [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;, Visibility Annotation: level: RUNTIME (runtime-visible)
 Annotations:
Annotation: type: Ljavax/persistence/ManyToMany; num elems: 1 elems: 
Annotation Element: kind: [ name: cascade values: [Annotation Element: kind: e name: null type name: Ljavax/persistence/CascadeType; constant name: ALL]

Annotation: type: Ljavax/persistence/JoinTable; num elems: 3 elems: 
Annotation Element: kind: s name: name value: user_role
Annotation Element: kind: [ name: joinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: user_id
]
Annotation Element: kind: [ name: inverseJoinColumns values: [Annotation Element: kind: @ name: nullvalue: Annotation: type: Ljavax/persistence/JoinColumn; num elems: 1 elems: 
Annotation Element: kind: s name: name value: role_id
]

]
NRA.java: getCondFromManyToMany(): user_id
NRA.java: getCondFromManyToMany(): role_id
NRA.java: getCondFromManyToMany(): join condition = Equals
| Alpha.role_id
| Role.user_id
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.posts
DIRRegionAnalyzer.java: constructDIR(): baseEntity NAme=User
Construct/Utils.java: bcelActualCollectionFieldType(): className= com.reljicd.model.User
 fieldName= posts
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private Long id [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String email [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String password [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String username [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String name [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private String lastName [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private int active [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Collection roles [Signature: Ljava/util/Collection<Lcom/reljicd/model/Role;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): bcel field = private java.util.Collection posts [Signature: Ljava/util/Collection<Lcom/reljicd/model/Post;>;] [RuntimeVisibleAnnotations]
Construct/Utils.java: bcelActualCollectionFieldType(): annotation Entry= Ljavax/persistence/OneToMany;
Construct/Utils.java: bcelActualCollectionFieldType(): att = Signature: Ljava/util/Collection<Lcom/reljicd/model/Post;>;
Construct/Utils.java: bcelActualCollectionFieldType(): sigatt = Signature: Ljava/util/Collection<Lcom/reljicd/model/Post;>;
DIRRegionAnalyzer.java: constructDIR(): nestedField Entity= com.reljicd.model.Post
DIRRegionAnalyzer.java: constructDIR(): From soot typeclass= com.reljicd.model.Post
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.posts
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.posts
DIRRegionAnalyzer.java: constructDIR(): key= return.posts
 value= this.user.posts
NRA.java: getJoinCondFromField(): OneToMany Field
NRA.java: getCondFromOneToMany(): mappedBy= user
NRA.java: getJoinedColumn(): joined Column value=  user_id
NRA.java: getCondFromOneToMany(): join condition = Equals
| Alpha.id
| Post.user_id
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: constructDIR(): key = return.posts
DIRRegionAnalyzer.java: constructDIR(): val = this.user.posts
DIRRegionAnalyzer.java: constructDIR(): key = $r0.email
DIRRegionAnalyzer.java: constructDIR(): val = this.user.email
DIRRegionAnalyzer.java: constructDIR(): key = $r0.active
DIRRegionAnalyzer.java: constructDIR(): val = this.user.active
DIRRegionAnalyzer.java: constructDIR(): key = $r0
DIRRegionAnalyzer.java: constructDIR(): val = this.user
DIRRegionAnalyzer.java: constructDIR(): key = $r0.name
DIRRegionAnalyzer.java: constructDIR(): val = this.user.name
DIRRegionAnalyzer.java: constructDIR(): key = return.email
DIRRegionAnalyzer.java: constructDIR(): val = this.user.email
DIRRegionAnalyzer.java: constructDIR(): key = this
DIRRegionAnalyzer.java: constructDIR(): val = Self
DIRRegionAnalyzer.java: constructDIR(): key = return.lastName
DIRRegionAnalyzer.java: constructDIR(): val = this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): key = $r0.lastName
DIRRegionAnalyzer.java: constructDIR(): val = this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): key = $r0.posts
DIRRegionAnalyzer.java: constructDIR(): val = this.user.posts
DIRRegionAnalyzer.java: constructDIR(): key = $r0.password
DIRRegionAnalyzer.java: constructDIR(): val = this.user.password
DIRRegionAnalyzer.java: constructDIR(): key = $r0.id
DIRRegionAnalyzer.java: constructDIR(): val = this.user.id
DIRRegionAnalyzer.java: constructDIR(): key = return.active
DIRRegionAnalyzer.java: constructDIR(): val = this.user.active
DIRRegionAnalyzer.java: constructDIR(): key = return.roles
DIRRegionAnalyzer.java: constructDIR(): val = this.user.roles
DIRRegionAnalyzer.java: constructDIR(): key = $r0.username
DIRRegionAnalyzer.java: constructDIR(): val = this.user.username
DIRRegionAnalyzer.java: constructDIR(): key = return.username
DIRRegionAnalyzer.java: constructDIR(): val = this.user.username
DIRRegionAnalyzer.java: constructDIR(): key = return.password
DIRRegionAnalyzer.java: constructDIR(): val = this.user.password
DIRRegionAnalyzer.java: constructDIR(): key = return.id
DIRRegionAnalyzer.java: constructDIR(): val = this.user.id
DIRRegionAnalyzer.java: constructDIR(): key = $r0.roles
DIRRegionAnalyzer.java: constructDIR(): val = this.user.roles
DIRRegionAnalyzer.java: constructDIR(): key = return.name
DIRRegionAnalyzer.java: constructDIR(): val = this.user.name
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = this.user
DIRRegionAnalyzer.java: constructDIR(): key = return
DIRRegionAnalyzer.java: constructDIR(): val = this.user
DIRRegionAnalyzer.java: constructDIR(): Printing ve map of callee = com.reljicd.model.Post: com.reljicd.model.User getUser() END
DIRRegionAnalyzer.java: constructDIR(): v1 access paths: [$r4.id, $r4.email, $r4.password, $r4.username, $r4.name, $r4.lastName, $r4.active, $r4.roles, $r4.posts]
DIRRegionAnalyzer.java: constructDIR(): key = $r4.id
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.id
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.id
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.id
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.id
DIRRegionAnalyzer.java: constructDIR(): key = $r4.email
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.email
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.email
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.email
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.email
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.email
DIRRegionAnalyzer.java: constructDIR(): key = $r4.password
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.password
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.password
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.password
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.password
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.password
DIRRegionAnalyzer.java: constructDIR(): key = $r4.username
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.username
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.username
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.username
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.username
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.username
DIRRegionAnalyzer.java: constructDIR(): key = $r4.name
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.name
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.name
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.name
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.name
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.name
DIRRegionAnalyzer.java: constructDIR(): key = $r4.lastName
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.lastName
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.lastName
DIRRegionAnalyzer.java: constructDIR(): key = $r4.active
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.active
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.active
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.active
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.active
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.active
DIRRegionAnalyzer.java: constructDIR(): key = $r4.roles
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.roles
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.roles
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.roles
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.roles
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.roles
DIRRegionAnalyzer.java: constructDIR(): key = $r4.posts
DIRRegionAnalyzer.java: constructDIR(): lookup (retAccp) = return.posts
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.user.posts
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke post.<com.reljicd.model.Post: com.reljicd.model.User getUser()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.Post: com.reljicd.model.User getUser()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.Post: com.reljicd.model.User getUser()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [post]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.title, this.body, this.createDate, this.user, this.comments]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.user.posts
DIRRegionAnalyzer.java: constructDIR(): callersDag = this.user.posts
DIRRegionAnalyzer.java: constructDIR(): resolvedVal = this.user.posts
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r5 = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = getUsername
construct/Utils.java: parseInvokeExpr(): methodSignature = com.reljicd.model.User: java.lang.String getUsername()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <com.reljicd.model.User: java.lang.String getUsername()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <com.reljicd.model.User: java.lang.String getUsername()>
construct/Utils.java: parseObjectInvoke(): methodName = getUsername
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = com.reljicd.model.User: java.lang.String getUsername()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
construct/Utils.java: parseObjectInvoke(): calleeRegion class: class dbridge.analysis.region.regions.Region
ARegion.java: analyze(): set cur method of analyzer to: getUsername
DIRRegionAnalyzer.java: constructDIR(): region = | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): Basic block num: 0
DIRRegionAnalyzer.java: constructDIR(): basic block = [this := @this: com.reljicd.model.User, $r0 = this.<com.reljicd.model.User: java.lang.String username>, return $r0]
DIRRegionAnalyzer.java: constructDIR(): curUnit = this := @this: com.reljicd.model.User
Utils.java: getVarNode(): this
Utils.java: getVarNode(): JimpleLocalBox(this)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r0 = this.<com.reljicd.model.User: java.lang.String username>
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JInstanceFieldRef
DIRRegionAnalyzer.java: constructDIR(): CASE v1 = v2.f, f is primitive
DIRRegionAnalyzer.java: constructDIR(): mapping $r0 -> this.username
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r0
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock0
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0 ~~~
this.username

~~~ return ~~~
this.username

~~~ this ~~~
Self


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0 ~~~
this.username

~~~ return ~~~
this.username

~~~ this ~~~
Self


DIR.java: updateRegion(): update region entry: $r0=this.username
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: return=this.username
construct/Utils.java: parseObjectInvoke(): Put DIR of callee = com.reljicd.model.User: java.lang.String getUsername() in the map
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is Non-library method
DIRRegionAnalyzer.java: constructDIR(): leftType = java.lang.String
DIRRegionAnalyzer.java: constructDIR(): leftType : java.lang.String
DIRRegionAnalyzer.java: constructDIR(): case : caseCallToMethodWBodyRetPrim()
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), v1 is primitive, foo is not a library method
DIRRegionAnalyzer.java: constructDIR(): v1: $r5
DIRRegionAnalyzer.java: constructDIR(): foo: <com.reljicd.model.User: java.lang.String getUsername()>
DIRRegionAnalyzer.java: handleSideEffects(): invokeExpr = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
DIRRegionAnalyzer.java: handleSideEffects(): methodname: getUsername
DIRRegionAnalyzer.java: handleSideEffects(): invokedSig = com.reljicd.model.User: java.lang.String getUsername()
DIRRegionAnalyzer.java: handleSideEffects(): soot method = <com.reljicd.model.User: java.lang.String getUsername()>
DIRRegionAnalyzer.java: handleSideEffects(): formalArgs = [this]
DIRRegionAnalyzer.java: handleSideEffects(): actualArgs = [$r4]
DIRRegionAnalyzer.java: handleSideEffects(): ith formal: this
DIRRegionAnalyzer.java: handleSideEffects(): ith formal type: com.reljicd.model.User
DIRRegionAnalyzer.java: handleSideEffects(): ith actual: $r4
DIRRegionAnalyzer.java: handleSideEffects(): Going to flatten: this
DIRRegionAnalyzer.java: handleSideEffects(): flattened res = [this.id, this.email, this.password, this.username, this.name, this.lastName, this.active, this.roles, this.posts]
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.id
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.email
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.password
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.username
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.name
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.lastName
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.active
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.roles
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): formal access path in callee: this.posts
DIRRegionAnalyzer.java: handleSideEffects(): callee ve map domain: [$r0, this, return]
DIRRegionAnalyzer.java: handleSideEffects(): formalaccp eedag = null
DIRRegionAnalyzer.java: handleSideEffects(): method and affected keys = getUsername, []
DIRRegionAnalyzer.java: handleSideEffects(): formal ith: this
DIRRegionAnalyzer.java: handleSideEffects(): actual ith: $r4
DIRRegionAnalyzer.java: handleSideEffects(): formalAccpList = [this.id, this.email, this.password, this.username, this.name, this.lastName, this.active, this.roles, this.posts]
DIRRegionAnalyzer.java: constructDIR(): methodSig: com.reljicd.model.User: java.lang.String getUsername()
DIRRegionAnalyzer.java: constructDIR(): FuncStackAnalyzer.funcDIRMap: {com.reljicd.model.Post: com.reljicd.model.User getUser()=~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.posts ~~~
this.user.posts

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ return ~~~
this.user

~~~ return ~~~
this.user

~~~ return.active ~~~
this.user.active

~~~ return.email ~~~
this.user.email

~~~ return.id ~~~
this.user.id

~~~ return.lastName ~~~
this.user.lastName

~~~ return.name ~~~
this.user.name

~~~ return.password ~~~
this.user.password

~~~ return.posts ~~~
this.user.posts

~~~ return.roles ~~~
this.user.roles

~~~ return.username ~~~
this.user.username

~~~ this ~~~
Self

, com.reljicd.model.User: java.lang.String getUsername()=~~~ $r0 ~~~
this.username

~~~ return ~~~
this.username

~~~ this ~~~
Self

, com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)=~~~ $r0 ~~~
this.postRepository

~~~ $r2 ~~~
$r1

~~~ $r2.body ~~~
$r1.body

~~~ $r2.comments ~~~
$r1.comments

~~~ $r2.createDate ~~~
$r1.createDate

~~~ $r2.id ~~~
$r1.id

~~~ $r2.title ~~~
$r1.title

~~~ $r2.user ~~~
$r1.user

~~~ return ~~~
$r1

~~~ return ~~~
$r1

~~~ return.body ~~~
$r1.body

~~~ return.comments ~~~
$r1.comments

~~~ return.createDate ~~~
$r1.createDate

~~~ return.id ~~~
$r1.id

~~~ return.title ~~~
$r1.title

~~~ return.user ~~~
$r1.user

~~~ this ~~~
Self

~~~ this.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate

}
DIRRegionAnalyzer.java: constructDIR(): dir callee: ~~~ $r0 ~~~
this.username

~~~ return ~~~
this.username

~~~ this ~~~
Self


DIRRegionAnalyzer.java: constructDIR(): retCalleeCloned: this.username
DIRRegionAnalyzer.java: dagFormalsToActuals(): dag to be renamed: this.username
DIRRegionAnalyzer.java: dagFormalsToActuals(): invoke expression: virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokeExpr = virtualinvoke $r4.<com.reljicd.model.User: java.lang.String getUsername()>()
DIRRegionAnalyzer.java: dagFormalsToActuals(): invokedSig = com.reljicd.model.User: java.lang.String getUsername()
DIRRegionAnalyzer.java: dagFormalsToActuals(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
DIRRegionAnalyzer.java: dagFormalsToActuals(): soot method = <com.reljicd.model.User: java.lang.String getUsername()>
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalArgs = [this]
DIRRegionAnalyzer.java: dagFormalsToActuals(): actualArgs = [$r4]
DIRRegionAnalyzer.java: dagFormalsToActuals(): formalAccpList = [this.id, this.email, this.password, this.username, this.name, this.lastName, this.active, this.roles, this.posts]
DIRRegionAnalyzer.java: dagFormalsToActuals(): ret init val: this.username
DIRRegionAnalyzer.java: constructDIR(): after dag formals to actuals: $r4.username
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
DIRRegionAnalyzer.java: constructDIR(): CASE: v1 = v2.foo(v3), foo is library method
Utils.java: getVarNode(): $r6
Utils.java: getVarNode(): LinkedVariableBox($r6)
JAssignStmtCons.java: construct(): virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
construct/Utils.java: parseInvokeExpr(): methodName = append
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
construct/Utils.java: parseObjectInvoke(): methodName = append
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)
DIRRegionAnalyzer.java: constructDIR(): curUnit = $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JAssignStmt
DIRRegionAnalyzer.java: constructDIR(): leftClass = class soot.jimple.internal.JimpleLocal
DIRRegionAnalyzer.java: constructDIR(): rightClass = class soot.jimple.internal.JVirtualInvokeExpr
DIRRegionAnalyzer.java: constructDIR(): CASE method call in rhs
DIRRegionAnalyzer.java: constructDIR(): Update dir map
construct/Utils.java: parseInvokeExpr(): methodName = toString
construct/Utils.java: parseInvokeExpr(): methodSignature = java.lang.StringBuilder: java.lang.String toString()
construct/Utils.java: parseObjectInvoke(): virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
Utils.java: normalizeMethodSignature(): invokeExpr.getMethod().getSignature(): <java.lang.StringBuilder: java.lang.String toString()>
Utils.java: normalizeMethodSignature(): invokeExpr.getMethodRef().getSignature(): <java.lang.StringBuilder: java.lang.String toString()>
construct/Utils.java: parseObjectInvoke(): methodName = toString
construct/Utils.java: parseObjectInvoke(): invokeExpr = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()
construct/Utils.java: parseObjectInvoke(): methodSignature = java.lang.StringBuilder: java.lang.String toString()
construct/Utils.java: parseObjectInvoke(): FuncStackAnalyzer.funcRegionMap.domain: [com.reljicd.model.Post: com.reljicd.model.User getUser(), com.reljicd.model.User: java.lang.String getUsername(), com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult), com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)]
construct/Utils.java: parseObjectInvoke(): method wont handle 4
DIRRegionAnalyzer.java: constructDIR(): Wont handle this method
DIRRegionAnalyzer.java: constructDIR(): curUnit = return $r7
DIRRegionAnalyzer.java: constructDIR(): curUnit instance of JReturnStmt
DIRRegionAnalyzer.java: constructDIR(): Finished with all the statements
DIRRegionAnalyzer.java: constructDIR(): BasicBlockRegion: | BasicBlock2
DIRRegionAnalyzer.java: constructDIR(): BasicBlockDIR: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate

~~~ $r2 ~~~
BottomNode

~~~ $r3 ~~~
BottomNode

~~~ $r4 ~~~
post.user

~~~ $r4.active ~~~
this.user.active

~~~ $r4.email ~~~
this.user.email

~~~ $r4.id ~~~
this.user.id

~~~ $r4.lastName ~~~
this.user.lastName

~~~ $r4.name ~~~
this.user.name

~~~ $r4.password ~~~
this.user.password

~~~ $r4.posts ~~~
this.user.posts

~~~ $r4.roles ~~~
this.user.roles

~~~ $r4.username ~~~
this.user.username

~~~ $r5 ~~~
this.user.username

~~~ $r6 ~~~
BottomNode

~~~ $r7 ~~~
MethodWontHandleOp

~~~ return ~~~
MethodWontHandleOp

~~~ this.postServiceImpl.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate

~~~ $r2 ~~~
BottomNode

~~~ $r3 ~~~
BottomNode

~~~ $r4 ~~~
post.user

~~~ $r4.active ~~~
this.user.active

~~~ $r4.email ~~~
this.user.email

~~~ $r4.id ~~~
this.user.id

~~~ $r4.lastName ~~~
this.user.lastName

~~~ $r4.name ~~~
this.user.name

~~~ $r4.password ~~~
this.user.password

~~~ $r4.posts ~~~
this.user.posts

~~~ $r4.roles ~~~
this.user.roles

~~~ $r4.username ~~~
this.user.username

~~~ $r5 ~~~
this.user.username

~~~ $r6 ~~~
BottomNode

~~~ $r7 ~~~
MethodWontHandleOp

~~~ return ~~~
MethodWontHandleOp

~~~ this.postServiceImpl.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate


DIR.java: updateRegion(): update region entry: this.postServiceImpl.postRepository=Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIR.java: updateRegion(): update region entry: $r4.lastName=this.user.lastName
DIR.java: updateRegion(): update region entry: $r2=BottomNode
DIR.java: updateRegion(): update region entry: $r3=BottomNode
DIR.java: updateRegion(): update region entry: $r4=post.user
DIR.java: updateRegion(): update region entry: $r5=this.user.username
DIR.java: updateRegion(): update region entry: $r6=BottomNode
DIR.java: updateRegion(): update region entry: $r7=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r4.posts=this.user.posts
DIR.java: updateRegion(): update region entry: $r4.username=this.user.username
DIR.java: updateRegion(): update region entry: $r4.id=this.user.id
DIR.java: updateRegion(): update region entry: $r4.password=this.user.password
DIR.java: updateRegion(): update region entry: $r4.active=this.user.active
DIR.java: updateRegion(): update region entry: $r4.roles=this.user.roles
DIR.java: updateRegion(): update region entry: $r0.postRepository=Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
DIR.java: updateRegion(): update region entry: $r4.name=this.user.name
DIR.java: updateRegion(): update region entry: $r4.email=this.user.email
DIR.java: updateRegion(): update region entry: return=MethodWontHandleOp
analysis/Utils.java: extractCondition(): condVar: condition
analysis/Utils.java: extractCondition(): input dir (of headRegion): ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


DIRIfThenElseRegionAnalyzer.java: constructDIR(): condition: Equals
| MethodWontHandleOp
| 0
DIRIfThenElseRegionAnalyzer.java: constructDIR(): condition after inversion: NotEq
| MethodWontHandleOp
| 0
DIRIfThenElseRegionAnalyzer.java: constructDIR(): headDIR: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


DIRIfThenElseRegionAnalyzer.java: constructDIR(): condRegDIR: ~~~ $r0.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate

~~~ $r2 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode

~~~ $r3 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user

~~~ $r4.active ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active

~~~ $r4.email ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email

~~~ $r4.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id

~~~ $r4.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName

~~~ $r4.name ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name

~~~ $r4.password ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password

~~~ $r4.posts ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts

~~~ $r4.roles ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles

~~~ $r4.username ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp

~~~ this.postServiceImpl.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate


DIRIfThenElseRegionAnalyzer.java: constructDIR(): merging head with cond
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:this.postServiceImpl.postRepository
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:$r0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Tuple
| post
| List
| | post.id
| | post.title
| | post.body
| | post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Tuple
| post
| List
| | post.id
| | post.title
| | post.body
| | post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:post
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| post.id
| post.title
| post.body
| post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| post.id
| post.title
| post.body
| post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:post.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:post.title
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:post.body
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.createDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.body
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.title
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.postServiceImpl.postRepository
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.lastName
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.lastName
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r2
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r2
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r3
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r3
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:post.user
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.user
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r5
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.username
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.username
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r5
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r6
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:BottomNode
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: BottomNode
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r6
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r7
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r7
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.posts
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.posts
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.posts
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.posts
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.username
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.username
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.username
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.username
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.password
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.password
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.password
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.password
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.active
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.active
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.active
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.active
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.roles
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.roles
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.roles
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.roles
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r0.postRepository
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:$r0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:Tuple
| post
| List
| | post.id
| | post.title
| | post.body
| | post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: Tuple
| post
| List
| | post.id
| | post.title
| | post.body
| | post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:post
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:List
| post.id
| post.title
| post.body
| post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: List
| post.id
| post.title
| post.body
| post.createDate
analysis/Utils.java: resolveTree(): i = 0 child of top:post.id
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:post.title
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:post.body
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 3 child of top:post.createDate
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.createDate
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.body
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.title
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post.id
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: post
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r0.postRepository
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.name
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.name
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:"/postForm"
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: "/postForm"
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp
analysis/Utils.java: resolveTree(): return
analysis/Utils.java: resolveTree(): in: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email
analysis/Utils.java: resolveTree(): dir: ~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ this ~~~
Self


analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email
analysis/Utils.java: resolveTree(): i = 0 child of top:NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:$r4.email
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 2 child of top:this.user.email
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: this.user.email
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: $r4.email
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: NotEq
| MethodWontHandleOp
| 0
analysis/Utils.java: resolveTree(): i = 0 child of top:MethodWontHandleOp
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): i = 1 child of top:0
analysis/Utils.java: resolveTree(): stack add
analysis/Utils.java: resolveTree(): newChildValueList.size(): 0
analysis/Utils.java: resolveTree(): newChildValueList: []
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: 0
analysis/Utils.java: resolveTree(): stack pop
analysis/Utils.java: resolveTree(): popped: MethodWontHandleOp
analysis/Utils.java: resolveTree(): out: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email
analysis/Utils.java: resolveTree(): return
DIRIfThenElseRegionAnalyzer.java: constructDIR(): IfThenElseDIR: ~~~ $r0.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate

~~~ $r2 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode

~~~ $r3 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user

~~~ $r4.active ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active

~~~ $r4.email ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email

~~~ $r4.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id

~~~ $r4.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName

~~~ $r4.name ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name

~~~ $r4.password ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password

~~~ $r4.posts ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts

~~~ $r4.roles ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles

~~~ $r4.username ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp

~~~ this ~~~
Self

~~~ this.postServiceImpl.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate


AbstractDIRRegionAnalyzer.java: run(): AbstractRegion dir constructed: ~~~ $r0.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate

~~~ $r2 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode

~~~ $r3 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user

~~~ $r4.active ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active

~~~ $r4.email ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email

~~~ $r4.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id

~~~ $r4.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName

~~~ $r4.name ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name

~~~ $r4.password ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password

~~~ $r4.posts ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts

~~~ $r4.roles ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles

~~~ $r4.username ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp

~~~ this ~~~
Self

~~~ this.postServiceImpl.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate


DIR.java: updateRegion(): update region entry: this.postServiceImpl.postRepository=?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
DIR.java: updateRegion(): update region entry: $r4.lastName=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName
DIR.java: updateRegion(): update region entry: $r2=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode
DIR.java: updateRegion(): update region entry: $r3=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode
DIR.java: updateRegion(): update region entry: $r4=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user
DIR.java: updateRegion(): update region entry: $r5=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username
DIR.java: updateRegion(): update region entry: this=Self
DIR.java: updateRegion(): update region entry: $r6=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode
DIR.java: updateRegion(): update region entry: $r7=?
Exception in thread "main" | NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp
DIR.java: updateRegion(): java.lang.StackOverflowError
update region entry: $r4.posts=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts
DIR.java: updateRegion(): update region entry: $r4.username=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username
DIR.java: updateRegion(): update region entry: $r4.id=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id
DIR.java: updateRegion(): update region entry: $r4.password=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password
DIR.java: updateRegion(): update region entry: condition=Equals
| MethodWontHandleOp
| 0
DIR.java: updateRegion(): update region entry: $r4.active=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active
DIR.java: updateRegion(): update region entry: $r4.roles=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles
DIR.java: updateRegion(): update region entry: $r0.postRepository=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
DIR.java: updateRegion(): update region entry: $z0=MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r4.name=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name
DIR.java: updateRegion(): update region entry: return=?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp
DIR.java: updateRegion(): update region entry: $r4.email=?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email
Resultant dag : ~~~ $r0.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate

~~~ $r2 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode

~~~ $r3 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode

~~~ $r4 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user

~~~ $r4.active ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active

~~~ $r4.email ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email

~~~ $r4.id ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id

~~~ $r4.lastName ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName

~~~ $r4.name ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name

~~~ $r4.password ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password

~~~ $r4.posts ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts

~~~ $r4.roles ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles

~~~ $r4.username ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username

~~~ $r5 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username

~~~ $r6 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode

~~~ $r7 ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp

~~~ $z0 ~~~
MethodWontHandleOp

~~~ condition ~~~
Equals
| MethodWontHandleOp
| 0

~~~ return ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp

~~~ this ~~~
Self

~~~ this.postServiceImpl.postRepository ~~~
?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate


final FuncStackAnalyzer3 = 
{com.reljicd.model.Post: com.reljicd.model.User getUser()=~~~ $r0 ~~~
this.user

~~~ $r0.active ~~~
this.user.active

~~~ $r0.email ~~~
this.user.email

~~~ $r0.id ~~~
this.user.id

~~~ $r0.lastName ~~~
this.user.lastName

~~~ $r0.name ~~~
this.user.name

~~~ $r0.password ~~~
this.user.password

~~~ $r0.posts ~~~
this.user.posts

~~~ $r0.roles ~~~
this.user.roles

~~~ $r0.username ~~~
this.user.username

~~~ return ~~~
this.user

~~~ return ~~~
this.user

~~~ return.active ~~~
this.user.active

~~~ return.email ~~~
this.user.email

~~~ return.id ~~~
this.user.id

~~~ return.lastName ~~~
this.user.lastName

~~~ return.name ~~~
this.user.name

~~~ return.password ~~~
this.user.password

~~~ return.posts ~~~
this.user.posts

~~~ return.roles ~~~
this.user.roles

~~~ return.username ~~~
this.user.username

~~~ this ~~~
Self

, com.reljicd.model.User: java.lang.String getUsername()=~~~ $r0 ~~~
this.username

~~~ return ~~~
this.username

~~~ this ~~~
Self

, com.reljicd.service.impl.PostServiceImp: com.reljicd.model.Post save(com.reljicd.model.Post)=~~~ $r0 ~~~
this.postRepository

~~~ $r2 ~~~
$r1

~~~ $r2.body ~~~
$r1.body

~~~ $r2.comments ~~~
$r1.comments

~~~ $r2.createDate ~~~
$r1.createDate

~~~ $r2.id ~~~
$r1.id

~~~ $r2.title ~~~
$r1.title

~~~ $r2.user ~~~
$r1.user

~~~ return ~~~
$r1

~~~ return ~~~
$r1

~~~ return.body ~~~
$r1.body

~~~ return.comments ~~~
$r1.comments

~~~ return.createDate ~~~
$r1.createDate

~~~ return.id ~~~
$r1.id

~~~ return.title ~~~
$r1.title

~~~ return.user ~~~
$r1.user

~~~ this ~~~
Self

~~~ this.postRepository ~~~
Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate

}
FuncStackAnalyzer.java: constructDIRForStack(): Printing veMap for method: com.reljicd.controller.PostController: java.lang.String createNewPost(com.reljicd.model.Post,org.springframework.validation.BindingResult)
FuncStackAnalyzer.java: constructDIRForStack(): VEMap Num Entries: 21
FuncStackAnalyzer.java: constructDIRForStack(): key set of ve map of root function: [this.postServiceImpl.postRepository, $r4.lastName, $r2, $r3, $r4, $r5, this, $r6, $r7, $r4.posts, $r4.username, $r4.id, $r4.password, condition, $r4.active, $r4.roles, $r0.postRepository, $z0, $r4.name, return, $r4.email]
Final veMap of this.postServiceImpl.postRepository = 
?
| NotEq
| | MethodWontHandleOp
| | 0
	at java.util.HashMap.getNode(HashMap.java:573)
| this.postServiceImpl.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
	at java.util.HashMap.get(HashMap.java:558)
| | | | post.createDate
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
repo varnode: this.postServiceImpl.postRepository
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
repo type = null
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
handleCascading(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
accesspathsofarg: []
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
handleCascading(): check mapDBFetchAccessGraph in savepostProcess
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
cosntruct/utils.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
mapDBFetchAccessGraph(): check relExpBaseAccp= null
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
handleCascading(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
coll f: comments
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformSave(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
saveNode = Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformSave(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
columns: [id, title, body, createDate]
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformSave(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
idfieldname: id
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformSave(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
idInd = 0
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformSave(): 	at idField: post.id
SavePostProcess.java: com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformSave(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
transformed save: ?
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
| Equals
| | Sel
| | | Cartesian
| | | | this.postServiceImpl.postRepository
| | | Equals
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
| | | | id
| | | | post.id
| | EmptySet
| UnionOp
| | this.postServiceImpl.postRepository
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
| UnionOp
| | RelationalMinus
| | | Cartesian
| | | | this.postServiceImpl.postRepository
| | | Sel
| | | | Cartesian
| | | | | this.postServiceImpl.postRepository
| | | | Equals
| | | | | id
| | | | | post.id
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
Final veMap of $r4.lastName = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
repo varnode: $r4.lastName
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
repo type = null
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)

	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
Final veMap of $r2 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
repo varnode: $r2
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): repo type = null
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r3 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r3
| BottomNode
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
repo varnode: $r3
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): repo type = null
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
WARN: SaveP	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
ostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)

Final veMap of $r4 = 
?
| NotEq
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
| | MethodWontHandleOp
| | 0
| $r4
| post.user
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): repo varnode: $r4
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess.java: 	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
SavePostProcess(): repo type = null
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)

	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
Final veMap of $r5 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username
SavePostProcess.java: SavePostProcess(): repo varnode: $r5
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of this = 
Self
SavePostProcess.java: SavePostProcess(): repo varnode: this
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r6 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode
SavePostProcess.java: SavePostProcess(): repo varnode: $r6
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r7 = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp
SavePostProcess.java: SavePostProcess(): repo varnode: $r7
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.posts = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.posts
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.username = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.username
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.id = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.id
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.password = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.password
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of condition = 
Equals
| MethodWontHandleOp
| 0
SavePostProcess.java: SavePostProcess(): repo varnode: condition
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.active = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.active
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.roles = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.roles
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r0.postRepository = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| Save
| | $r0
| | Tuple
| | | post
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
SavePostProcess.java: SavePostProcess(): repo varnode: $r0.postRepository
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
SavePostProcess.java: handleCascading(): accesspathsofarg: []
SavePostProcess.java: handleCascading(): check mapDBFetchAccessGraph in savepostProcess
cosntruct/utils.java: mapDBFetchAccessGraph(): check relExpBaseAccp= null
SavePostProcess.java: handleCascading(): coll f: comments
SavePostProcess.java: transformSave(): saveNode = Save
| $r0
| Tuple
| | post
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
SavePostProcess.java: transformSave(): columns: [id, title, body, createDate]
SavePostProcess.java: transformSave(): idfieldname: id
SavePostProcess.java: transformSave(): idInd = 0
SavePostProcess.java: transformSave(): idField: post.id
SavePostProcess.java: transformSave(): transformed save: ?
| Equals
| | Sel
| | | Cartesian
| | | | $r0.postRepository
| | | Equals
| | | | id
| | | | post.id
| | EmptySet
| UnionOp
| | $r0.postRepository
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
| UnionOp
| | RelationalMinus
| | | Cartesian
| | | | $r0.postRepository
| | | Sel
| | | | Cartesian
| | | | | $r0.postRepository
| | | | Equals
| | | | | id
| | | | | post.id
| | List
| | | post.id
| | | post.title
| | | post.body
| | | post.createDate
Final veMap of $z0 = 
MethodWontHandleOp
SavePostProcess.java: SavePostProcess(): repo varnode: $z0
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.name = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.name
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of return = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp
SavePostProcess.java: SavePostProcess(): repo varnode: return
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
Final veMap of $r4.email = 
?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email
SavePostProcess.java: SavePostProcess(): repo varnode: $r4.email
SavePostProcess.java: SavePostProcess(): repo type = null
WARN: SavePostProcess.java: SavePostProcess(): repository type is null, as a consequence, cannot find id field
key: this.postServiceImpl.postRepository
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| this.postServiceImpl.postRepository
| ?
| | Equals
| | | Sel
| | | | Cartesian
| | | | | this.postServiceImpl.postRepository
| | | | Equals
| | | | | id
| | | | | post.id
| | | EmptySet
| | UnionOp
| | | this.postServiceImpl.postRepository
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
| | UnionOp
| | | RelationalMinus
| | | | Cartesian
| | | | | this.postServiceImpl.postRepository
| | | | Sel
| | | | | Cartesian
| | | | | | this.postServiceImpl.postRepository
| | | | | Equals
| | | | | | id
| | | | | | post.id
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate

key: $r4.lastName
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.lastName
| this.user.lastName

key: $r2
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r2
| BottomNode

key: $r3
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
| $r3
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
| BottomNode
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at co
key: $r4
m.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4
| post.user

key: $r5
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r5
| this.user.username

key: this
value: Self

key: $r6
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r6
| BottomNode

key: $r7
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r7
| MethodWontHandleOp

key: $r4.posts
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.posts
| this.user.posts

key: $r4.username
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.username
| this.user.username

key: $r4.id
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.id
| this.user.id

key: $r4.password
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.password
| this.user.password

key: condition
value: Equals
| MethodWontHandleOp
| 0

key: $r4.active
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.active
| this.user.active

key: $r4.roles
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.roles
| this.user.roles

key: $r0.postRepository
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r0.postRepository
| ?
| | Equals
| | | Sel
| | | | Cartesian
| | | | | $r0.postRepository
| | | | Equals
| | | | | id
| | | | | post.id
| | | EmptySet
| | UnionOp
| | | $r0.postRepository
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate
| | UnionOp
| | | RelationalMinus
| | | | Cartesian
| | | | | $r0.postRepository
| | | | Sel
| | | | | Cartesian
| | | | | | $r0.postRepository
| | | | | Equals
| | | | | | id
| | | | | | post.id
| | | List
| | | | post.id
| | | | post.title
| | | | post.body
| | | | post.createDate

key: $z0
value: MethodWontHandleOp

key: $r4.name
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.name
| this.user.name

key: return
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| "/postForm"
| MethodWontHandleOp

key: $r4.email
value: ?
| NotEq
| | MethodWontHandleOp
| | 0
| $r4.email
| this.user.email





























Tables and Fields :

User fields = 
{lastName=FieldData, password=FieldData, user_id=FieldData, role_id=FieldData, roles=Role, name=FieldData, active=FieldData, id=FieldData, posts=Post, email=FieldData, username=FieldData}

	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
	at com.iisc.pav.AlloyGenerator.getSuperType(AlloyGenerator.java:819)
